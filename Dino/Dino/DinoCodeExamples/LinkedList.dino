
void Main() {
	LinkedList list = new LinkedList
	for int i = 0 | i < 10 | ++i:
		list.InsertAtBack(i)
	PrintLn("Original:")
	list.Show()
	list.Insert(4, 444)
	PrintLn()
	PrintLn("After Insert(4, 444):")
	list.Show()
	PrintLn()
	PrintLn("After Remove(4):")
	list.Remove(4)
	list.Show()
	PrintLn()
	PrintLn("After Clear():")
	list.Clear()
	list.Show()
}

type ListNode {
	int data
	ListNode next
	
	void SetData(int data): this.data = data
	void SetNext(ListNode next): this.next = next
	int GetData(): return this.data

	ListNode GetNext(int index) {
		if index == 0:
			return this
		if this.next == null:
			PrintLn("List index out of bounds")
		return this.next.GetNext(index - 1)
	}

	LinkedList Insert(int index, int data) {
		if index == 0:
			return CreateNode(data, this)
		if this.next == null:
			PrintLn("List index out of bounds")
		else if this.next.next == null and index == 2:
			this.next.next = CreateNode(data, null)
		else: this.next = this.next.Insert(index - 1, data)
		return this
	}

	int Size() {
		if this.next == null: return 1
		return 1 + this.next.Size()
	}

	void InsertAtEnd(int data) {
		if this.next == null:
			this.next = CreateNode(data, null)
		else: this.next.InsertAtEnd(data)
	}

	void Show() {
		Print(this.data)
		if this.next != null:  {
			Print(", ")
			this.next.Show()
		}
	}

	void DeleteChildren() {
		unless this.next == null {
			this.next.DeleteChildren()
			delete this.next
		}
	}

	void Remove(int index) {
		if this.next == null or index <= 0:
			Print("index out of bounds")
		else if index == 1 {
			ListNode temp = this.next 
			this.next = this.next.next
			delete temp
		}
		else: this.next.Remove(index - 1)
	}
}

type LinkedList {
	ListNode first

	int GetValue(int index): return first.GetNext(index)

	int Size() {
		if this.first == null:
			return 0
		return this.first.Size()
	}

	void Insert(int index, int data) {
		if this.first == null:
			this.first = CreateNode(data, null)
		else: this.first = this.first.Insert(index, data)
	}

	void InsertAtFront(int data): this.first = CreateNode(data, first)

	void InsertAtBack(int data) {
		if this.first == null:
			this.first = CreateNode(data, null)
		else: this.first.InsertAtEnd(data)		
	}

	void Remove(int index) {
		if index == 0 {
			ListNode temp = this.first
			this.first = this.first.GetNext(1)
			delete temp
		}
		else: this.first.Remove(index)
	}

	void Show() {
		Print("[")
		unless this.first == null:
			this.first.Show()
		PrintLn("]")
	}

	void Clear() {
		unless this.first == null {
			this.first.DeleteChildren()
			delete this.first
		}
	}
}

ListNode CreateNode(int data, ListNode next) {
	ListNode node = new ListNode
	node.SetData(data)
	node.SetNext(next)
	return node
}

Main()