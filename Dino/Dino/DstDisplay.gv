digraph G {
7 [label="<StatementBlock>"];7->10;7->33;7->44;
10 [label="<FunctionDeclaration>"];10->8;10->11;10->13;10->15;
8 [label="<VariableDeclaration>\nSum
Type: int"];
11 [label="<VariableDeclaration>\na
Type: int"];
13 [label="<VariableDeclaration>\nb
Type: int"];
15 [label="<StatementBlock>"];15->19;
19 [label="<UnaryOperationStatement>\nreturn"];19->18;
18 [label="<BinaryOperator>\n+
Type: int"];18->17;18->16;
17 [label="<Identifier>\na
Type: int"];
16 [label="<Identifier>\nb
Type: int"];
33 [label="<Assignment>\n:=
Type: int(int, int)"];33->24;33->23;
24 [label="<VariableDeclaration>\nptr
Type: int(int, int)"];
23 [label="<Identifier>\nSum
Type: int(int, int)"];
44 [label="<Assignment>\n:=
Type: int"];44->42;44->41;
42 [label="<VariableDeclaration>\na
Type: int"];
41 [label="<FunctionCall>\nType: int"];41->34;41->35;
34 [label="<Identifier>\nptr
Type: int(int, int)"];
35 [label="<ExpressionList>\nType: int, int"];35->37;35->39;
37 [label="<IntegerLiteral>\n1
Type: int"];
39 [label="<IntegerLiteral>\n2
Type: int"];
}