digraph G {
0 [label="<StatementBlock>"];0->2;0->74;0->290;0->434;0->456;
2 [label="<Assignment>\n="];2->1;2->3;
1 [label="<VariableDeclaration>\nfunc void Main"];
3 [label="<FunctionLiteral>
void"];3->4;
4 [label="<StatementBlock>"];4->6;4->9;4->26;4->31;4->35;4->39;4->41;4->46;4->48;4->50;4->55;4->60;4->62;4->64;4->69;4->73;
6 [label="<Assignment>\n="];6->5;6->7;
5 [label="<VariableDeclaration>\nLinkedList list"];
7 [label="<UnaryOperator>\nnew"];7->8;
8 [label="<Variable>\nLinkedList"];
9 [label="<StatementBlock>"];9->11;9->13;
11 [label="<Assignment>\n="];11->10;11->12;
10 [label="<VariableDeclaration>\nint i"];
12 [label="<IntegerLiteral>\n0"];
13 [label="<While>"];13->15;13->19;
15 [label="<BinaryOperator>\n<"];15->14;15->16;
14 [label="<Variable>\ni"];
16 [label="<IntegerLiteral>\n10"];
19 [label="<StatementBlock>"];19->23;19->17;
23 [label="<FunctionCall>\n"];23->21;23->24;
21 [label="<BinaryOperator>\n."];21->20;21->22;
20 [label="<Variable>\nlist"];
22 [label="<Variable>\nInsertAtBack"];
24 [label="<Variable>\ni"];
17 [label="<Increment>\n++"];17->18;
18 [label="<Variable>\ni"];
26 [label="<FunctionCall>\n"];26->25;26->27;
25 [label="<Variable>\nPrintLn"];
27 [label="<IntegerLiteral>\nOriginal:"];
31 [label="<FunctionCall>\n"];31->29;
29 [label="<BinaryOperator>\n."];29->28;29->30;
28 [label="<Variable>\nlist"];
30 [label="<Variable>\nShow"];
35 [label="<FunctionCall>\n"];35->33;35->36;35->37;
33 [label="<BinaryOperator>\n."];33->32;33->34;
32 [label="<Variable>\nlist"];
34 [label="<Variable>\nInsert"];
36 [label="<IntegerLiteral>\n4"];
37 [label="<IntegerLiteral>\n444"];
39 [label="<FunctionCall>\n"];39->38;
38 [label="<Variable>\nPrintLn"];
41 [label="<FunctionCall>\n"];41->40;41->42;
40 [label="<Variable>\nPrintLn"];
42 [label="<IntegerLiteral>\nAfter Insert(4, 444):"];
46 [label="<FunctionCall>\n"];46->44;
44 [label="<BinaryOperator>\n."];44->43;44->45;
43 [label="<Variable>\nlist"];
45 [label="<Variable>\nShow"];
48 [label="<FunctionCall>\n"];48->47;
47 [label="<Variable>\nPrintLn"];
50 [label="<FunctionCall>\n"];50->49;50->51;
49 [label="<Variable>\nPrintLn"];
51 [label="<IntegerLiteral>\nAfter Remove(4):"];
55 [label="<FunctionCall>\n"];55->53;55->56;
53 [label="<BinaryOperator>\n."];53->52;53->54;
52 [label="<Variable>\nlist"];
54 [label="<Variable>\nRemove"];
56 [label="<IntegerLiteral>\n4"];
60 [label="<FunctionCall>\n"];60->58;
58 [label="<BinaryOperator>\n."];58->57;58->59;
57 [label="<Variable>\nlist"];
59 [label="<Variable>\nShow"];
62 [label="<FunctionCall>\n"];62->61;
61 [label="<Variable>\nPrintLn"];
64 [label="<FunctionCall>\n"];64->63;64->65;
63 [label="<Variable>\nPrintLn"];
65 [label="<IntegerLiteral>\nAfter Clear():"];
69 [label="<FunctionCall>\n"];69->67;
67 [label="<BinaryOperator>\n."];67->66;67->68;
66 [label="<Variable>\nlist"];
68 [label="<Variable>\nClear"];
73 [label="<FunctionCall>\n"];73->71;
71 [label="<BinaryOperator>\n."];71->70;71->72;
70 [label="<Variable>\nlist"];
72 [label="<Variable>\nShow"];
74 [label="<TypeDeclaration>\nListNode"];74->75;74->76;74->78;74->88;74->98;74->104;74->130;74->182;74->199;74->219;74->238;74->253;
75 [label="<VariableDeclaration>\nint data"];
76 [label="<VariableDeclaration>\nListNode next"];
78 [label="<Assignment>\n="];78->77;78->79;
77 [label="<VariableDeclaration>\nfunc void SetData"];
79 [label="<FunctionLiteral>
void"];79->80;79->86;
80 [label="<VariableDeclaration>\nint data"];
86 [label="<StatementBlock>"];86->84;
84 [label="<Assignment>\n="];84->82;84->85;
82 [label="<BinaryOperator>\n."];82->81;82->83;
81 [label="<Variable>\nthis"];
83 [label="<Variable>\ndata"];
85 [label="<Variable>\ndata"];
88 [label="<Assignment>\n="];88->87;88->89;
87 [label="<VariableDeclaration>\nfunc void SetNext"];
89 [label="<FunctionLiteral>
void"];89->90;89->96;
90 [label="<VariableDeclaration>\nListNode next"];
96 [label="<StatementBlock>"];96->94;
94 [label="<Assignment>\n="];94->92;94->95;
92 [label="<BinaryOperator>\n."];92->91;92->93;
91 [label="<Variable>\nthis"];
93 [label="<Variable>\nnext"];
95 [label="<Variable>\nnext"];
98 [label="<Assignment>\n="];98->97;98->99;
97 [label="<VariableDeclaration>\nfunc int GetData"];
99 [label="<FunctionLiteral>
int"];99->102;
102 [label="<StatementBlock>"];102->100;
100 [label="<UnaryOperatorStatement>\nreturn"];100->101;
101 [label="<Variable>\ndata"];
104 [label="<Assignment>\n="];104->103;104->105;
103 [label="<VariableDeclaration>\nfunc ListNode GetNext"];
105 [label="<FunctionLiteral>
ListNode"];105->106;105->107;
106 [label="<VariableDeclaration>\nint index"];
107 [label="<StatementBlock>"];107->108;107->114;107->121;
108 [label="<IfThenElse>"];108->110;108->112;108->4294967295;
110 [label="<BinaryOperator>\n=="];110->109;110->111;
109 [label="<Variable>\nindex"];
111 [label="<IntegerLiteral>\n0"];
112 [label="<UnaryOperatorStatement>\nreturn"];112->113;
113 [label="<Variable>\nthis"];
114 [label="<IfThenElse>"];114->116;114->119;114->4294967295;
116 [label="<BinaryOperator>\n=="];116->115;116->117;
115 [label="<Variable>\nnext"];
117 [label="<NullLiteral>"];
119 [label="<FunctionCall>\n"];119->118;119->120;
118 [label="<Variable>\nPrintLn"];
120 [label="<IntegerLiteral>\nList index out of bounds"];
121 [label="<UnaryOperatorStatement>\nreturn"];121->125;
125 [label="<FunctionCall>\n"];125->123;125->127;
123 [label="<BinaryOperator>\n."];123->122;123->124;
122 [label="<Variable>\nnext"];
124 [label="<Variable>\nGetNext"];
127 [label="<BinaryOperator>\n-"];127->126;127->128;
126 [label="<Variable>\nindex"];
128 [label="<IntegerLiteral>\n1"];
130 [label="<Assignment>\n="];130->129;130->131;
129 [label="<VariableDeclaration>\nfunc LinkedList Insert"];
131 [label="<FunctionLiteral>
LinkedList"];131->132;131->133;131->134;
132 [label="<VariableDeclaration>\nint index"];
133 [label="<VariableDeclaration>\nint data"];
134 [label="<StatementBlock>"];134->135;134->144;134->179;
135 [label="<IfThenElse>"];135->137;135->139;135->4294967295;
137 [label="<BinaryOperator>\n=="];137->136;137->138;
136 [label="<Variable>\nindex"];
138 [label="<IntegerLiteral>\n0"];
139 [label="<UnaryOperatorStatement>\nreturn"];139->141;
141 [label="<FunctionCall>\n"];141->140;141->142;141->143;
140 [label="<Variable>\nCreateNode"];
142 [label="<Variable>\ndata"];
143 [label="<Variable>\nthis"];
144 [label="<IfThenElse>"];144->146;144->149;144->151;
146 [label="<BinaryOperator>\n=="];146->145;146->147;
145 [label="<Variable>\nnext"];
147 [label="<NullLiteral>"];
149 [label="<FunctionCall>\n"];149->148;149->150;
148 [label="<Variable>\nPrintLn"];
150 [label="<IntegerLiteral>\nList index out of bounds"];
151 [label="<IfThenElse>"];151->157;151->164;151->170;
157 [label="<BinaryOperator>\nand"];157->155;157->159;
155 [label="<BinaryOperator>\n=="];155->153;155->156;
153 [label="<BinaryOperator>\n."];153->152;153->154;
152 [label="<Variable>\nnext"];
154 [label="<Variable>\nnext"];
156 [label="<NullLiteral>"];
159 [label="<BinaryOperator>\n=="];159->158;159->160;
158 [label="<Variable>\nindex"];
160 [label="<IntegerLiteral>\n2"];
164 [label="<Assignment>\n="];164->162;164->166;
162 [label="<BinaryOperator>\n."];162->161;162->163;
161 [label="<Variable>\nnext"];
163 [label="<Variable>\nnext"];
166 [label="<FunctionCall>\n"];166->165;166->167;166->168;
165 [label="<Variable>\nCreateNode"];
167 [label="<Variable>\ndata"];
168 [label="<NullLiteral>"];
170 [label="<Assignment>\n="];170->169;170->174;
169 [label="<Variable>\nnext"];
174 [label="<FunctionCall>\n"];174->172;174->176;174->178;
172 [label="<BinaryOperator>\n."];172->171;172->173;
171 [label="<Variable>\nnext"];
173 [label="<Variable>\nInsert"];
176 [label="<BinaryOperator>\n-"];176->175;176->177;
175 [label="<Variable>\nindex"];
177 [label="<IntegerLiteral>\n1"];
178 [label="<Variable>\ndata"];
179 [label="<UnaryOperatorStatement>\nreturn"];179->180;
180 [label="<Variable>\nthis"];
182 [label="<Assignment>\n="];182->181;182->183;
181 [label="<VariableDeclaration>\nfunc int Size"];
183 [label="<FunctionLiteral>
int"];183->184;
184 [label="<StatementBlock>"];184->185;184->191;
185 [label="<IfThenElse>"];185->187;185->189;185->4294967295;
187 [label="<BinaryOperator>\n=="];187->186;187->188;
186 [label="<Variable>\nnext"];
188 [label="<NullLiteral>"];
189 [label="<UnaryOperatorStatement>\nreturn"];189->190;
190 [label="<IntegerLiteral>\n1"];
191 [label="<UnaryOperatorStatement>\nreturn"];191->193;
193 [label="<BinaryOperator>\n+"];193->192;193->197;
192 [label="<IntegerLiteral>\n1"];
197 [label="<FunctionCall>\n"];197->195;
195 [label="<BinaryOperator>\n."];195->194;195->196;
194 [label="<Variable>\nnext"];
196 [label="<Variable>\nSize"];
199 [label="<Assignment>\n="];199->198;199->200;
198 [label="<VariableDeclaration>\nfunc void InsertAtEnd"];
200 [label="<FunctionLiteral>
void"];200->201;200->202;
201 [label="<VariableDeclaration>\nint data"];
202 [label="<StatementBlock>"];202->203;
203 [label="<IfThenElse>"];203->205;203->208;203->216;
205 [label="<BinaryOperator>\n=="];205->204;205->206;
204 [label="<Variable>\nnext"];
206 [label="<NullLiteral>"];
208 [label="<Assignment>\n="];208->207;208->210;
207 [label="<Variable>\nnext"];
210 [label="<FunctionCall>\n"];210->209;210->211;210->212;
209 [label="<Variable>\nCreateNode"];
211 [label="<Variable>\ndata"];
212 [label="<NullLiteral>"];
216 [label="<FunctionCall>\n"];216->214;216->217;
214 [label="<BinaryOperator>\n."];214->213;214->215;
213 [label="<Variable>\nnext"];
215 [label="<Variable>\nInsertAtEnd"];
217 [label="<Variable>\ndata"];
219 [label="<Assignment>\n="];219->218;219->220;
218 [label="<VariableDeclaration>\nfunc void Show"];
220 [label="<FunctionLiteral>
void"];220->221;
221 [label="<StatementBlock>"];221->223;221->225;
223 [label="<FunctionCall>\n"];223->222;223->224;
222 [label="<Variable>\nPrint"];
224 [label="<Variable>\ndata"];
225 [label="<IfThenElse>"];225->227;225->229;225->4294967295;
227 [label="<BinaryOperator>\n!="];227->226;227->228;
226 [label="<Variable>\nnext"];
228 [label="<NullLiteral>"];
229 [label="<StatementBlock>"];229->231;229->236;
231 [label="<FunctionCall>\n"];231->230;231->232;
230 [label="<Variable>\nPrint"];
232 [label="<IntegerLiteral>\n, "];
236 [label="<FunctionCall>\n"];236->234;
234 [label="<BinaryOperator>\n."];234->233;234->235;
233 [label="<Variable>\nnext"];
235 [label="<Variable>\nShow"];
238 [label="<Assignment>\n="];238->237;238->239;
237 [label="<VariableDeclaration>\nfunc void DeleteChildren"];
239 [label="<FunctionLiteral>
void"];239->240;
240 [label="<StatementBlock>"];240->241;
241 [label="<IfThenElse>"];241->243;241->4294967295;241->245;
243 [label="<BinaryOperator>\n=="];243->242;243->244;
242 [label="<Variable>\nnext"];
244 [label="<NullLiteral>"];
245 [label="<StatementBlock>"];245->249;245->250;
249 [label="<FunctionCall>\n"];249->247;
247 [label="<BinaryOperator>\n."];247->246;247->248;
246 [label="<Variable>\nnext"];
248 [label="<Variable>\nDeleteChildren"];
250 [label="<UnaryOperatorStatement>\ndelete"];250->251;
251 [label="<Variable>\nnext"];
253 [label="<Assignment>\n="];253->252;253->254;
252 [label="<VariableDeclaration>\nfunc void Remove"];
254 [label="<FunctionLiteral>
void"];254->255;254->256;
255 [label="<VariableDeclaration>\nint index"];
256 [label="<StatementBlock>"];256->257;
257 [label="<IfThenElse>"];257->261;257->266;257->268;
261 [label="<BinaryOperator>\nor"];261->259;261->263;
259 [label="<BinaryOperator>\n=="];259->258;259->260;
258 [label="<Variable>\nnext"];
260 [label="<NullLiteral>"];
263 [label="<BinaryOperator>\n<="];263->262;263->264;
262 [label="<Variable>\nindex"];
264 [label="<IntegerLiteral>\n0"];
266 [label="<FunctionCall>\n"];266->265;266->267;
265 [label="<Variable>\nPrint"];
267 [label="<IntegerLiteral>\nindex out of bounds"];
268 [label="<IfThenElse>"];268->270;268->272;268->286;
270 [label="<BinaryOperator>\n=="];270->269;270->271;
269 [label="<Variable>\nindex"];
271 [label="<IntegerLiteral>\n1"];
272 [label="<StatementBlock>"];272->274;272->277;272->281;
274 [label="<Assignment>\n="];274->273;274->275;
273 [label="<VariableDeclaration>\nListNode temp"];
275 [label="<Variable>\nnext"];
277 [label="<Assignment>\n="];277->276;277->279;
276 [label="<Variable>\nnext"];
279 [label="<BinaryOperator>\n."];279->278;279->280;
278 [label="<Variable>\nnext"];
280 [label="<Variable>\nnext"];
281 [label="<UnaryOperatorStatement>\ndelete"];281->282;
282 [label="<Variable>\ntemp"];
286 [label="<FunctionCall>\n"];286->284;286->288;
284 [label="<BinaryOperator>\n."];284->283;284->285;
283 [label="<Variable>\nnext"];
285 [label="<Variable>\nRemove"];
288 [label="<BinaryOperator>\n-"];288->287;288->289;
287 [label="<Variable>\nindex"];
289 [label="<IntegerLiteral>\n1"];
290 [label="<TypeDeclaration>\nLinkedList"];290->291;290->293;290->304;290->319;290->343;290->354;290->374;290->401;290->419;
291 [label="<VariableDeclaration>\nListNode first"];
293 [label="<Assignment>\n="];293->292;293->294;
292 [label="<VariableDeclaration>\nfunc int GetValue"];
294 [label="<FunctionLiteral>
int"];294->295;294->302;
295 [label="<VariableDeclaration>\nint index"];
302 [label="<StatementBlock>"];302->296;
296 [label="<UnaryOperatorStatement>\nreturn"];296->300;
300 [label="<FunctionCall>\n"];300->298;300->301;
298 [label="<BinaryOperator>\n."];298->297;298->299;
297 [label="<Variable>\nfirst"];
299 [label="<Variable>\nGetNext"];
301 [label="<Variable>\nindex"];
304 [label="<Assignment>\n="];304->303;304->305;
303 [label="<VariableDeclaration>\nfunc int Size"];
305 [label="<FunctionLiteral>
int"];305->306;
306 [label="<StatementBlock>"];306->307;306->313;
307 [label="<IfThenElse>"];307->309;307->311;307->4294967295;
309 [label="<BinaryOperator>\n=="];309->308;309->310;
308 [label="<Variable>\nfirst"];
310 [label="<NullLiteral>"];
311 [label="<UnaryOperatorStatement>\nreturn"];311->312;
312 [label="<IntegerLiteral>\n0"];
313 [label="<UnaryOperatorStatement>\nreturn"];313->317;
317 [label="<FunctionCall>\n"];317->315;
315 [label="<BinaryOperator>\n."];315->314;315->316;
314 [label="<Variable>\nfirst"];
316 [label="<Variable>\nSize"];
319 [label="<Assignment>\n="];319->318;319->320;
318 [label="<VariableDeclaration>\nfunc void Insert"];
320 [label="<FunctionLiteral>
void"];320->321;320->322;320->323;
321 [label="<VariableDeclaration>\nint index"];
322 [label="<VariableDeclaration>\nint data"];
323 [label="<StatementBlock>"];323->324;
324 [label="<IfThenElse>"];324->326;324->329;324->335;
326 [label="<BinaryOperator>\n=="];326->325;326->327;
325 [label="<Variable>\nfirst"];
327 [label="<NullLiteral>"];
329 [label="<Assignment>\n="];329->328;329->331;
328 [label="<Variable>\nfirst"];
331 [label="<FunctionCall>\n"];331->330;331->332;331->333;
330 [label="<Variable>\nCreateNode"];
332 [label="<Variable>\ndata"];
333 [label="<NullLiteral>"];
335 [label="<Assignment>\n="];335->334;335->339;
334 [label="<Variable>\nfirst"];
339 [label="<FunctionCall>\n"];339->337;339->340;339->341;
337 [label="<BinaryOperator>\n."];337->336;337->338;
336 [label="<Variable>\nfirst"];
338 [label="<Variable>\nInsert"];
340 [label="<Variable>\nindex"];
341 [label="<Variable>\ndata"];
343 [label="<Assignment>\n="];343->342;343->344;
342 [label="<VariableDeclaration>\nfunc void InsertAtFront"];
344 [label="<FunctionLiteral>
void"];344->345;344->352;
345 [label="<VariableDeclaration>\nint data"];
352 [label="<StatementBlock>"];352->347;
347 [label="<Assignment>\n="];347->346;347->349;
346 [label="<Variable>\nfirst"];
349 [label="<FunctionCall>\n"];349->348;349->350;349->351;
348 [label="<Variable>\nCreateNode"];
350 [label="<Variable>\ndata"];
351 [label="<Variable>\nfirst"];
354 [label="<Assignment>\n="];354->353;354->355;
353 [label="<VariableDeclaration>\nfunc void InsertAtBack"];
355 [label="<FunctionLiteral>
void"];355->356;355->357;
356 [label="<VariableDeclaration>\nint data"];
357 [label="<StatementBlock>"];357->358;
358 [label="<IfThenElse>"];358->360;358->363;358->371;
360 [label="<BinaryOperator>\n=="];360->359;360->361;
359 [label="<Variable>\nfirst"];
361 [label="<NullLiteral>"];
363 [label="<Assignment>\n="];363->362;363->365;
362 [label="<Variable>\nfirst"];
365 [label="<FunctionCall>\n"];365->364;365->366;365->367;
364 [label="<Variable>\nCreateNode"];
366 [label="<Variable>\ndata"];
367 [label="<NullLiteral>"];
371 [label="<FunctionCall>\n"];371->369;371->372;
369 [label="<BinaryOperator>\n."];369->368;369->370;
368 [label="<Variable>\nfirst"];
370 [label="<Variable>\nInsertAtEnd"];
372 [label="<Variable>\ndata"];
374 [label="<Assignment>\n="];374->373;374->375;
373 [label="<VariableDeclaration>\nfunc void Remove"];
375 [label="<FunctionLiteral>
void"];375->376;375->377;
376 [label="<VariableDeclaration>\nint index"];
377 [label="<StatementBlock>"];377->378;
378 [label="<IfThenElse>"];378->380;378->382;378->398;
380 [label="<BinaryOperator>\n=="];380->379;380->381;
379 [label="<Variable>\nindex"];
381 [label="<IntegerLiteral>\n0"];
382 [label="<StatementBlock>"];382->384;382->387;382->393;
384 [label="<Assignment>\n="];384->383;384->385;
383 [label="<VariableDeclaration>\nListNode temp"];
385 [label="<Variable>\nfirst"];
387 [label="<Assignment>\n="];387->386;387->391;
386 [label="<Variable>\nfirst"];
391 [label="<FunctionCall>\n"];391->389;391->392;
389 [label="<BinaryOperator>\n."];389->388;389->390;
388 [label="<Variable>\nfirst"];
390 [label="<Variable>\nGetNext"];
392 [label="<IntegerLiteral>\n1"];
393 [label="<UnaryOperatorStatement>\ndelete"];393->394;
394 [label="<Variable>\ntemp"];
398 [label="<FunctionCall>\n"];398->396;398->399;
396 [label="<BinaryOperator>\n."];396->395;396->397;
395 [label="<Variable>\nfirst"];
397 [label="<Variable>\nRemove"];
399 [label="<Variable>\nindex"];
401 [label="<Assignment>\n="];401->400;401->402;
400 [label="<VariableDeclaration>\nfunc void Show"];
402 [label="<FunctionLiteral>
void"];402->403;
403 [label="<StatementBlock>"];403->405;403->407;403->416;
405 [label="<FunctionCall>\n"];405->404;405->406;
404 [label="<Variable>\nPrint"];
406 [label="<IntegerLiteral>\n["];
407 [label="<IfThenElse>"];407->409;407->4294967295;407->414;
409 [label="<BinaryOperator>\n=="];409->408;409->410;
408 [label="<Variable>\nfirst"];
410 [label="<NullLiteral>"];
414 [label="<FunctionCall>\n"];414->412;
412 [label="<BinaryOperator>\n."];412->411;412->413;
411 [label="<Variable>\nfirst"];
413 [label="<Variable>\nShow"];
416 [label="<FunctionCall>\n"];416->415;416->417;
415 [label="<Variable>\nPrintLn"];
417 [label="<IntegerLiteral>\n]"];
419 [label="<Assignment>\n="];419->418;419->420;
418 [label="<VariableDeclaration>\nfunc void Clear"];
420 [label="<FunctionLiteral>
void"];420->421;
421 [label="<StatementBlock>"];421->422;
422 [label="<IfThenElse>"];422->424;422->4294967295;422->426;
424 [label="<BinaryOperator>\n=="];424->423;424->425;
423 [label="<Variable>\nfirst"];
425 [label="<NullLiteral>"];
426 [label="<StatementBlock>"];426->430;426->431;
430 [label="<FunctionCall>\n"];430->428;
428 [label="<BinaryOperator>\n."];428->427;428->429;
427 [label="<Variable>\nfirst"];
429 [label="<Variable>\nDeleteChildren"];
431 [label="<UnaryOperatorStatement>\ndelete"];431->432;
432 [label="<Variable>\nfirst"];
434 [label="<Assignment>\n="];434->433;434->435;
433 [label="<VariableDeclaration>\nfunc ListNode CreateNode"];
435 [label="<FunctionLiteral>
ListNode"];435->436;435->437;435->438;
436 [label="<VariableDeclaration>\nint data"];
437 [label="<VariableDeclaration>\nListNode next"];
438 [label="<StatementBlock>"];438->440;438->446;438->451;438->453;
440 [label="<Assignment>\n="];440->439;440->441;
439 [label="<VariableDeclaration>\nListNode node"];
441 [label="<UnaryOperator>\nnew"];441->442;
442 [label="<Variable>\nListNode"];
446 [label="<FunctionCall>\n"];446->444;446->447;
444 [label="<BinaryOperator>\n."];444->443;444->445;
443 [label="<Variable>\nnode"];
445 [label="<Variable>\nSetData"];
447 [label="<Variable>\ndata"];
451 [label="<FunctionCall>\n"];451->449;451->452;
449 [label="<BinaryOperator>\n."];449->448;449->450;
448 [label="<Variable>\nnode"];
450 [label="<Variable>\nSetNext"];
452 [label="<Variable>\nnext"];
453 [label="<UnaryOperatorStatement>\nreturn"];453->454;
454 [label="<Variable>\nnode"];
456 [label="<FunctionCall>\n"];456->455;
455 [label="<Variable>\nMain"];
}