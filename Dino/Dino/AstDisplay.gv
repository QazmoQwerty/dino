digraph G {
0 [label="<StatementBlock>"];0->3;0->77;0->296;0->452;0->477;
3 [label="<FunctionDeclaration>\n"];3->2;3->4;
2 [label="<VariableDeclaration>\nMain"];2->1;
1 [label="<Variable>\nvoid"];
4 [label="<StatementBlock>"];4->7;4->10;4->28;4->33;4->37;4->42;4->44;4->49;4->51;4->53;4->58;4->63;4->65;4->67;4->72;4->76;
7 [label="<Assignment>\n="];7->6;7->8;
6 [label="<VariableDeclaration>\nlist"];6->5;
5 [label="<Variable>\nLinkedList"];
8 [label="<UnaryOperator>\nnew"];8->9;
9 [label="<Variable>\nLinkedList"];
10 [label="<StatementBlock>"];10->13;10->15;
13 [label="<Assignment>\n="];13->12;13->14;
12 [label="<VariableDeclaration>\ni"];12->11;
11 [label="<Variable>\nint"];
14 [label="<IntegerLiteral>\n0"];
15 [label="<While>"];15->17;15->21;
17 [label="<BinaryOperator>\n<"];17->16;17->18;
16 [label="<Variable>\ni"];
18 [label="<IntegerLiteral>\n10"];
21 [label="<StatementBlock>"];21->25;21->19;
25 [label="<FunctionCall>\n"];25->23;25->26;
23 [label="<BinaryOperator>\n."];23->22;23->24;
22 [label="<Variable>\nlist"];
24 [label="<Variable>\nInsertAtBack"];
26 [label="<Variable>\ni"];
19 [label="<UnaryAssignment>\n++"];19->20;
20 [label="<Variable>\ni"];
28 [label="<FunctionCall>\n"];28->27;28->29;
27 [label="<Variable>\nPrint"];
29 [label="<StringLiteral>\nOriginal:"];
33 [label="<FunctionCall>\n"];33->31;
31 [label="<BinaryOperator>\n."];31->30;31->32;
30 [label="<Variable>\nlist"];
32 [label="<Variable>\nShow"];
37 [label="<FunctionCall>\n"];37->35;37->39;
35 [label="<BinaryOperator>\n."];35->34;35->36;
34 [label="<Variable>\nlist"];
36 [label="<Variable>\nInsert"];
39 [label="<ExpressionList>"];39->38;39->40;
38 [label="<IntegerLiteral>\n4"];
40 [label="<IntegerLiteral>\n444"];
42 [label="<FunctionCall>\n"];42->41;
41 [label="<Variable>\nPrint"];
44 [label="<FunctionCall>\n"];44->43;44->45;
43 [label="<Variable>\nPrint"];
45 [label="<StringLiteral>\nAfter Insert(4, 444):"];
49 [label="<FunctionCall>\n"];49->47;
47 [label="<BinaryOperator>\n."];47->46;47->48;
46 [label="<Variable>\nlist"];
48 [label="<Variable>\nShow"];
51 [label="<FunctionCall>\n"];51->50;
50 [label="<Variable>\nPrint"];
53 [label="<FunctionCall>\n"];53->52;53->54;
52 [label="<Variable>\nPrint"];
54 [label="<StringLiteral>\nAfter Remove(4):"];
58 [label="<FunctionCall>\n"];58->56;58->59;
56 [label="<BinaryOperator>\n."];56->55;56->57;
55 [label="<Variable>\nlist"];
57 [label="<Variable>\nRemove"];
59 [label="<IntegerLiteral>\n4"];
63 [label="<FunctionCall>\n"];63->61;
61 [label="<BinaryOperator>\n."];61->60;61->62;
60 [label="<Variable>\nlist"];
62 [label="<Variable>\nShow"];
65 [label="<FunctionCall>\n"];65->64;
64 [label="<Variable>\nPrint"];
67 [label="<FunctionCall>\n"];67->66;67->68;
66 [label="<Variable>\nPrint"];
68 [label="<StringLiteral>\nAfter Clear():"];
72 [label="<FunctionCall>\n"];72->70;
70 [label="<BinaryOperator>\n."];70->69;70->71;
69 [label="<Variable>\nlist"];
71 [label="<Variable>\nClear"];
76 [label="<FunctionCall>\n"];76->74;
74 [label="<BinaryOperator>\n."];74->73;74->75;
73 [label="<Variable>\nlist"];
75 [label="<Variable>\nShow"];
77 [label="<TypeDeclaration>\nListNode"];77->79;77->81;77->100;77->127;77->185;77->202;77->224;77->243;77->258;77->84;77->92;
79 [label="<VariableDeclaration>\ndata"];79->78;
78 [label="<Variable>\nint"];
81 [label="<VariableDeclaration>\nnext"];81->80;
80 [label="<Variable>\nListNode"];
100 [label="<FunctionDeclaration>\n"];100->99;100->102;100->103;
99 [label="<VariableDeclaration>\nGetNext"];99->98;
98 [label="<Variable>\nListNode"];
102 [label="<VariableDeclaration>\nindex"];102->101;
101 [label="<Variable>\nint"];
103 [label="<StatementBlock>"];103->104;103->110;103->117;
104 [label="<IfThenElse>"];104->106;104->108;104->-1;-1 [label="<NULL>"];
106 [label="<BinaryOperator>\n=="];106->105;106->107;
105 [label="<Variable>\nindex"];
107 [label="<IntegerLiteral>\n0"];
108 [label="<UnaryOperatorStatement>\nreturn"];108->109;
109 [label="<Variable>\nthis"];
110 [label="<IfThenElse>"];110->112;110->115;110->-2;-2 [label="<NULL>"];
112 [label="<BinaryOperator>\n=="];112->111;112->113;
111 [label="<Variable>\nnext"];
113 [label="<NullLiteral>"];
115 [label="<FunctionCall>\n"];115->114;115->116;
114 [label="<Variable>\nPrint"];
116 [label="<StringLiteral>\nList index out of bounds"];
117 [label="<UnaryOperatorStatement>\nreturn"];117->121;
121 [label="<FunctionCall>\n"];121->119;121->123;
119 [label="<BinaryOperator>\n."];119->118;119->120;
118 [label="<Variable>\nnext"];
120 [label="<Variable>\nGetNext"];
123 [label="<BinaryOperator>\n-"];123->122;123->124;
122 [label="<Variable>\nindex"];
124 [label="<IntegerLiteral>\n1"];
127 [label="<FunctionDeclaration>\n"];127->126;127->129;127->132;127->133;
126 [label="<VariableDeclaration>\nInsert"];126->125;
125 [label="<Variable>\nLinkedList"];
129 [label="<VariableDeclaration>\nindex"];129->128;
128 [label="<Variable>\nint"];
132 [label="<VariableDeclaration>\ndata"];132->131;
131 [label="<Variable>\nint"];
133 [label="<StatementBlock>"];133->134;133->144;133->181;
134 [label="<IfThenElse>"];134->136;134->138;134->-3;-3 [label="<NULL>"];
136 [label="<BinaryOperator>\n=="];136->135;136->137;
135 [label="<Variable>\nindex"];
137 [label="<IntegerLiteral>\n0"];
138 [label="<UnaryOperatorStatement>\nreturn"];138->140;
140 [label="<FunctionCall>\n"];140->139;140->142;
139 [label="<Variable>\nCreateNode"];
142 [label="<ExpressionList>"];142->141;142->143;
141 [label="<Variable>\ndata"];
143 [label="<Variable>\nthis"];
144 [label="<IfThenElse>"];144->146;144->149;144->151;
146 [label="<BinaryOperator>\n=="];146->145;146->147;
145 [label="<Variable>\nnext"];
147 [label="<NullLiteral>"];
149 [label="<FunctionCall>\n"];149->148;149->150;
148 [label="<Variable>\nPrint"];
150 [label="<StringLiteral>\nList index out of bounds"];
151 [label="<IfThenElse>"];151->157;151->164;151->171;
157 [label="<BinaryOperator>\nand"];157->155;157->159;
155 [label="<BinaryOperator>\n=="];155->153;155->156;
153 [label="<BinaryOperator>\n."];153->152;153->154;
152 [label="<Variable>\nnext"];
154 [label="<Variable>\nnext"];
156 [label="<NullLiteral>"];
159 [label="<BinaryOperator>\n=="];159->158;159->160;
158 [label="<Variable>\nindex"];
160 [label="<IntegerLiteral>\n2"];
164 [label="<Assignment>\n="];164->162;164->166;
162 [label="<BinaryOperator>\n."];162->161;162->163;
161 [label="<Variable>\nnext"];
163 [label="<Variable>\nnext"];
166 [label="<FunctionCall>\n"];166->165;166->168;
165 [label="<Variable>\nCreateNode"];
168 [label="<ExpressionList>"];168->167;168->169;
167 [label="<Variable>\ndata"];
169 [label="<NullLiteral>"];
171 [label="<Assignment>\n="];171->170;171->175;
170 [label="<Variable>\nnext"];
175 [label="<FunctionCall>\n"];175->173;175->179;
173 [label="<BinaryOperator>\n."];173->172;173->174;
172 [label="<Variable>\nnext"];
174 [label="<Variable>\nInsert"];
179 [label="<ExpressionList>"];179->177;179->180;
177 [label="<BinaryOperator>\n-"];177->176;177->178;
176 [label="<Variable>\nindex"];
178 [label="<IntegerLiteral>\n1"];
180 [label="<Variable>\ndata"];
181 [label="<UnaryOperatorStatement>\nreturn"];181->182;
182 [label="<Variable>\nthis"];
185 [label="<FunctionDeclaration>\n"];185->184;185->186;
184 [label="<VariableDeclaration>\nSize"];184->183;
183 [label="<Variable>\nint"];
186 [label="<StatementBlock>"];186->187;186->193;
187 [label="<IfThenElse>"];187->189;187->191;187->-4;-4 [label="<NULL>"];
189 [label="<BinaryOperator>\n=="];189->188;189->190;
188 [label="<Variable>\nnext"];
190 [label="<NullLiteral>"];
191 [label="<UnaryOperatorStatement>\nreturn"];191->192;
192 [label="<IntegerLiteral>\n1"];
193 [label="<UnaryOperatorStatement>\nreturn"];193->195;
195 [label="<BinaryOperator>\n+"];195->194;195->199;
194 [label="<IntegerLiteral>\n1"];
199 [label="<FunctionCall>\n"];199->197;
197 [label="<BinaryOperator>\n."];197->196;197->198;
196 [label="<Variable>\nnext"];
198 [label="<Variable>\nSize"];
202 [label="<FunctionDeclaration>\n"];202->201;202->204;202->205;
201 [label="<VariableDeclaration>\nInsertAtEnd"];201->200;
200 [label="<Variable>\nvoid"];
204 [label="<VariableDeclaration>\ndata"];204->203;
203 [label="<Variable>\nint"];
205 [label="<StatementBlock>"];205->206;
206 [label="<IfThenElse>"];206->208;206->211;206->220;
208 [label="<BinaryOperator>\n=="];208->207;208->209;
207 [label="<Variable>\nnext"];
209 [label="<NullLiteral>"];
211 [label="<Assignment>\n="];211->210;211->213;
210 [label="<Variable>\nnext"];
213 [label="<FunctionCall>\n"];213->212;213->215;
212 [label="<Variable>\nCreateNode"];
215 [label="<ExpressionList>"];215->214;215->216;
214 [label="<Variable>\ndata"];
216 [label="<NullLiteral>"];
220 [label="<FunctionCall>\n"];220->218;220->221;
218 [label="<BinaryOperator>\n."];218->217;218->219;
217 [label="<Variable>\nnext"];
219 [label="<Variable>\nInsertAtEnd"];
221 [label="<Variable>\ndata"];
224 [label="<FunctionDeclaration>\n"];224->223;224->225;
223 [label="<VariableDeclaration>\nShow"];223->222;
222 [label="<Variable>\nvoid"];
225 [label="<StatementBlock>"];225->227;225->229;
227 [label="<FunctionCall>\n"];227->226;227->228;
226 [label="<Variable>\nPrintL"];
228 [label="<Variable>\ndata"];
229 [label="<IfThenElse>"];229->231;229->233;229->-5;-5 [label="<NULL>"];
231 [label="<BinaryOperator>\n!="];231->230;231->232;
230 [label="<Variable>\nnext"];
232 [label="<NullLiteral>"];
233 [label="<StatementBlock>"];233->235;233->240;
235 [label="<FunctionCall>\n"];235->234;235->236;
234 [label="<Variable>\nPrintL"];
236 [label="<StringLiteral>\n, "];
240 [label="<FunctionCall>\n"];240->238;
238 [label="<BinaryOperator>\n."];238->237;238->239;
237 [label="<Variable>\nnext"];
239 [label="<Variable>\nShow"];
243 [label="<FunctionDeclaration>\n"];243->242;243->244;
242 [label="<VariableDeclaration>\nDeleteChildren"];242->241;
241 [label="<Variable>\nvoid"];
244 [label="<StatementBlock>"];244->245;
245 [label="<IfThenElse>"];245->247;245->-6;-6 [label="<NULL>"];245->249;
247 [label="<BinaryOperator>\n=="];247->246;247->248;
246 [label="<Variable>\nnext"];
248 [label="<NullLiteral>"];
249 [label="<StatementBlock>"];249->253;249->254;
253 [label="<FunctionCall>\n"];253->251;
251 [label="<BinaryOperator>\n."];251->250;251->252;
250 [label="<Variable>\nnext"];
252 [label="<Variable>\nDeleteChildren"];
254 [label="<UnaryOperatorStatement>\ndelete"];254->255;
255 [label="<Variable>\nnext"];
258 [label="<FunctionDeclaration>\n"];258->257;258->260;258->261;
257 [label="<VariableDeclaration>\nRemove"];257->256;
256 [label="<Variable>\nvoid"];
260 [label="<VariableDeclaration>\nindex"];260->259;
259 [label="<Variable>\nint"];
261 [label="<StatementBlock>"];261->262;
262 [label="<IfThenElse>"];262->266;262->271;262->273;
266 [label="<BinaryOperator>\nor"];266->264;266->268;
264 [label="<BinaryOperator>\n=="];264->263;264->265;
263 [label="<Variable>\nnext"];
265 [label="<NullLiteral>"];
268 [label="<BinaryOperator>\n<="];268->267;268->269;
267 [label="<Variable>\nindex"];
269 [label="<IntegerLiteral>\n0"];
271 [label="<FunctionCall>\n"];271->270;271->272;
270 [label="<Variable>\nPrintL"];
272 [label="<StringLiteral>\nindex out of bounds"];
273 [label="<IfThenElse>"];273->275;273->277;273->292;
275 [label="<BinaryOperator>\n=="];275->274;275->276;
274 [label="<Variable>\nindex"];
276 [label="<IntegerLiteral>\n1"];
277 [label="<StatementBlock>"];277->280;277->283;277->287;
280 [label="<Assignment>\n="];280->279;280->281;
279 [label="<VariableDeclaration>\ntemp"];279->278;
278 [label="<Variable>\nListNode"];
281 [label="<Variable>\nnext"];
283 [label="<Assignment>\n="];283->282;283->285;
282 [label="<Variable>\nnext"];
285 [label="<BinaryOperator>\n."];285->284;285->286;
284 [label="<Variable>\nnext"];
286 [label="<Variable>\nnext"];
287 [label="<UnaryOperatorStatement>\ndelete"];287->288;
288 [label="<Variable>\ntemp"];
292 [label="<FunctionCall>\n"];292->290;292->294;
290 [label="<BinaryOperator>\n."];290->289;290->291;
289 [label="<Variable>\nnext"];
291 [label="<Variable>\nRemove"];
294 [label="<BinaryOperator>\n-"];294->293;294->295;
293 [label="<Variable>\nindex"];
295 [label="<IntegerLiteral>\n1"];
84 [label="<PropertyDeclaration>"];84->83;84->85;84->88;
83 [label="<VariableDeclaration>\nData"];83->82;
82 [label="<Variable>\nint"];
85 [label="<UnaryOperatorStatement>\nreturn"];85->86;
86 [label="<Variable>\ndata"];
88 [label="<Assignment>\n="];88->87;88->89;
87 [label="<Variable>\ndata"];
89 [label="<Variable>\nvalue"];
92 [label="<PropertyDeclaration>"];92->91;92->93;92->96;
91 [label="<VariableDeclaration>\nNext"];91->90;
90 [label="<Variable>\nListNode"];
93 [label="<UnaryOperatorStatement>\nreturn"];93->94;
94 [label="<Variable>\nnext"];
96 [label="<Assignment>\n="];96->95;96->97;
95 [label="<Variable>\nnext"];
97 [label="<Variable>\nvalue"];
296 [label="<TypeDeclaration>\nLinkedList"];296->298;296->301;296->313;296->328;296->357;296->370;296->392;296->419;296->437;
298 [label="<VariableDeclaration>\nfirst"];298->297;
297 [label="<Variable>\nListNode"];
301 [label="<FunctionDeclaration>\n"];301->300;301->303;301->310;
300 [label="<VariableDeclaration>\nGetValue"];300->299;
299 [label="<Variable>\nint"];
303 [label="<VariableDeclaration>\nindex"];303->302;
302 [label="<Variable>\nint"];
310 [label="<StatementBlock>"];310->304;
304 [label="<UnaryOperatorStatement>\nreturn"];304->308;
308 [label="<FunctionCall>\n"];308->306;308->309;
306 [label="<BinaryOperator>\n."];306->305;306->307;
305 [label="<Variable>\nfirst"];
307 [label="<Variable>\nGetNext"];
309 [label="<Variable>\nindex"];
313 [label="<FunctionDeclaration>\n"];313->312;313->314;
312 [label="<VariableDeclaration>\nSize"];312->311;
311 [label="<Variable>\nint"];
314 [label="<StatementBlock>"];314->315;314->321;
315 [label="<IfThenElse>"];315->317;315->319;315->-7;-7 [label="<NULL>"];
317 [label="<BinaryOperator>\n=="];317->316;317->318;
316 [label="<Variable>\nfirst"];
318 [label="<NullLiteral>"];
319 [label="<UnaryOperatorStatement>\nreturn"];319->320;
320 [label="<IntegerLiteral>\n0"];
321 [label="<UnaryOperatorStatement>\nreturn"];321->325;
325 [label="<FunctionCall>\n"];325->323;
323 [label="<BinaryOperator>\n."];323->322;323->324;
322 [label="<Variable>\nfirst"];
324 [label="<Variable>\nSize"];
328 [label="<FunctionDeclaration>\n"];328->327;328->330;328->333;328->334;
327 [label="<VariableDeclaration>\nInsert"];327->326;
326 [label="<Variable>\nvoid"];
330 [label="<VariableDeclaration>\nindex"];330->329;
329 [label="<Variable>\nint"];
333 [label="<VariableDeclaration>\ndata"];333->332;
332 [label="<Variable>\nint"];
334 [label="<StatementBlock>"];334->335;
335 [label="<IfThenElse>"];335->337;335->340;335->347;
337 [label="<BinaryOperator>\n=="];337->336;337->338;
336 [label="<Variable>\nfirst"];
338 [label="<NullLiteral>"];
340 [label="<Assignment>\n="];340->339;340->342;
339 [label="<Variable>\nfirst"];
342 [label="<FunctionCall>\n"];342->341;342->344;
341 [label="<Variable>\nCreateNode"];
344 [label="<ExpressionList>"];344->343;344->345;
343 [label="<Variable>\ndata"];
345 [label="<NullLiteral>"];
347 [label="<Assignment>\n="];347->346;347->351;
346 [label="<Variable>\nfirst"];
351 [label="<FunctionCall>\n"];351->349;351->353;
349 [label="<BinaryOperator>\n."];349->348;349->350;
348 [label="<Variable>\nfirst"];
350 [label="<Variable>\nInsert"];
353 [label="<ExpressionList>"];353->352;353->354;
352 [label="<Variable>\nindex"];
354 [label="<Variable>\ndata"];
357 [label="<FunctionDeclaration>\n"];357->356;357->359;357->367;
356 [label="<VariableDeclaration>\nInsertAtFront"];356->355;
355 [label="<Variable>\nvoid"];
359 [label="<VariableDeclaration>\ndata"];359->358;
358 [label="<Variable>\nint"];
367 [label="<StatementBlock>"];367->361;
361 [label="<Assignment>\n="];361->360;361->363;
360 [label="<Variable>\nfirst"];
363 [label="<FunctionCall>\n"];363->362;363->365;
362 [label="<Variable>\nCreateNode"];
365 [label="<ExpressionList>"];365->364;365->366;
364 [label="<Variable>\ndata"];
366 [label="<Variable>\nfirst"];
370 [label="<FunctionDeclaration>\n"];370->369;370->372;370->373;
369 [label="<VariableDeclaration>\nInsertAtBack"];369->368;
368 [label="<Variable>\nvoid"];
372 [label="<VariableDeclaration>\ndata"];372->371;
371 [label="<Variable>\nint"];
373 [label="<StatementBlock>"];373->374;
374 [label="<IfThenElse>"];374->376;374->379;374->388;
376 [label="<BinaryOperator>\n=="];376->375;376->377;
375 [label="<Variable>\nfirst"];
377 [label="<NullLiteral>"];
379 [label="<Assignment>\n="];379->378;379->381;
378 [label="<Variable>\nfirst"];
381 [label="<FunctionCall>\n"];381->380;381->383;
380 [label="<Variable>\nCreateNode"];
383 [label="<ExpressionList>"];383->382;383->384;
382 [label="<Variable>\ndata"];
384 [label="<NullLiteral>"];
388 [label="<FunctionCall>\n"];388->386;388->389;
386 [label="<BinaryOperator>\n."];386->385;386->387;
385 [label="<Variable>\nfirst"];
387 [label="<Variable>\nInsertAtEnd"];
389 [label="<Variable>\ndata"];
392 [label="<FunctionDeclaration>\n"];392->391;392->394;392->395;
391 [label="<VariableDeclaration>\nRemove"];391->390;
390 [label="<Variable>\nvoid"];
394 [label="<VariableDeclaration>\nindex"];394->393;
393 [label="<Variable>\nint"];
395 [label="<StatementBlock>"];395->396;
396 [label="<IfThenElse>"];396->398;396->400;396->415;
398 [label="<BinaryOperator>\n=="];398->397;398->399;
397 [label="<Variable>\nindex"];
399 [label="<IntegerLiteral>\n0"];
400 [label="<StatementBlock>"];400->403;400->406;400->410;
403 [label="<Assignment>\n="];403->402;403->404;
402 [label="<VariableDeclaration>\ntemp"];402->401;
401 [label="<Variable>\nListNode"];
404 [label="<Variable>\nfirst"];
406 [label="<Assignment>\n="];406->405;406->408;
405 [label="<Variable>\nfirst"];
408 [label="<BinaryOperator>\n."];408->407;408->409;
407 [label="<Variable>\nfirst"];
409 [label="<Variable>\nNext"];
410 [label="<UnaryOperatorStatement>\ndelete"];410->411;
411 [label="<Variable>\ntemp"];
415 [label="<FunctionCall>\n"];415->413;415->416;
413 [label="<BinaryOperator>\n."];413->412;413->414;
412 [label="<Variable>\nfirst"];
414 [label="<Variable>\nRemove"];
416 [label="<Variable>\nindex"];
419 [label="<FunctionDeclaration>\n"];419->418;419->420;
418 [label="<VariableDeclaration>\nShow"];418->417;
417 [label="<Variable>\nvoid"];
420 [label="<StatementBlock>"];420->422;420->424;420->433;
422 [label="<FunctionCall>\n"];422->421;422->423;
421 [label="<Variable>\nPrintL"];
423 [label="<StringLiteral>\n["];
424 [label="<IfThenElse>"];424->426;424->-8;-8 [label="<NULL>"];424->431;
426 [label="<BinaryOperator>\n=="];426->425;426->427;
425 [label="<Variable>\nfirst"];
427 [label="<NullLiteral>"];
431 [label="<FunctionCall>\n"];431->429;
429 [label="<BinaryOperator>\n."];429->428;429->430;
428 [label="<Variable>\nfirst"];
430 [label="<Variable>\nShow"];
433 [label="<FunctionCall>\n"];433->432;433->434;
432 [label="<Variable>\nPrint"];
434 [label="<StringLiteral>\n]"];
437 [label="<FunctionDeclaration>\n"];437->436;437->438;
436 [label="<VariableDeclaration>\nClear"];436->435;
435 [label="<Variable>\nvoid"];
438 [label="<StatementBlock>"];438->439;
439 [label="<IfThenElse>"];439->441;439->-9;-9 [label="<NULL>"];439->443;
441 [label="<BinaryOperator>\n=="];441->440;441->442;
440 [label="<Variable>\nfirst"];
442 [label="<NullLiteral>"];
443 [label="<StatementBlock>"];443->447;443->448;
447 [label="<FunctionCall>\n"];447->445;
445 [label="<BinaryOperator>\n."];445->444;445->446;
444 [label="<Variable>\nfirst"];
446 [label="<Variable>\nDeleteChildren"];
448 [label="<UnaryOperatorStatement>\ndelete"];448->449;
449 [label="<Variable>\nfirst"];
452 [label="<FunctionDeclaration>\n"];452->451;452->454;452->457;452->458;
451 [label="<VariableDeclaration>\nCreateNode"];451->450;
450 [label="<Variable>\nListNode"];
454 [label="<VariableDeclaration>\ndata"];454->453;
453 [label="<Variable>\nint"];
457 [label="<VariableDeclaration>\nnext"];457->456;
456 [label="<Variable>\nListNode"];
458 [label="<StatementBlock>"];458->461;458->467;458->472;458->474;
461 [label="<Assignment>\n="];461->460;461->462;
460 [label="<VariableDeclaration>\nnode"];460->459;
459 [label="<Variable>\nListNode"];
462 [label="<UnaryOperator>\nnew"];462->463;
463 [label="<Variable>\nListNode"];
467 [label="<Assignment>\n="];467->465;467->468;
465 [label="<BinaryOperator>\n."];465->464;465->466;
464 [label="<Variable>\nnode"];
466 [label="<Variable>\nData"];
468 [label="<Variable>\ndata"];
472 [label="<Assignment>\n="];472->470;472->473;
470 [label="<BinaryOperator>\n."];470->469;470->471;
469 [label="<Variable>\nnode"];
471 [label="<Variable>\nNext"];
473 [label="<Variable>\nnext"];
474 [label="<UnaryOperatorStatement>\nreturn"];474->475;
475 [label="<Variable>\nnode"];
477 [label="<FunctionCall>\n"];477->476;
476 [label="<Variable>\nMain"];
}