digraph G {
0 [label="<StatementBlock>"];0->3;
3 [label="<FunctionDeclaration>\n"];3->2;3->4;
2 [label="<VariableDeclaration>\nMain"];2->1;
1 [label="<Variable>\nvoid"];
4 [label="<StatementBlock>"];4->6;4->10;4->16;4->39;4->44;4->48;4->352;
6 [label="<FunctionCall>\n"];6->5;6->7;
5 [label="<Variable>\nPrint"];
7 [label="<StringLiteral>\nEnter Command Buffer: "];
10 [label="<Assignment>\n="];10->9;10->12;
9 [label="<VariableDeclaration>\nbuf"];9->8;
8 [label="<Variable>\nstring"];
12 [label="<FunctionCall>\n"];12->11;
11 [label="<Variable>\nReadLine"];
16 [label="<Assignment>\n="];16->15;16->17;
15 [label="<VariableDeclaration>\nmemory"];15->14;
14 [label="<BinaryOperator>\n["];14->13;14->-1;-1 [label="<NULL>"];
13 [label="<Variable>\nint"];
17 [label="<UnaryOperator>\n{"];17->35;
35 [label="<ExpressionList>"];35->18;35->20;35->22;35->24;35->26;35->28;35->30;35->32;35->34;35->36;
18 [label="<IntegerLiteral>\n0"];
20 [label="<IntegerLiteral>\n0"];
22 [label="<IntegerLiteral>\n0"];
24 [label="<IntegerLiteral>\n0"];
26 [label="<IntegerLiteral>\n0"];
28 [label="<IntegerLiteral>\n0"];
30 [label="<IntegerLiteral>\n0"];
32 [label="<IntegerLiteral>\n0"];
34 [label="<IntegerLiteral>\n0"];
36 [label="<IntegerLiteral>\n0"];
39 [label="<Assignment>\n="];39->38;39->40;
38 [label="<VariableDeclaration>\nmemPtr"];38->37;
37 [label="<Variable>\nint"];
40 [label="<IntegerLiteral>\n0"];
44 [label="<Assignment>\n="];44->42;44->46;
42 [label="<BinaryOperator>\n."];42->41;42->43;
41 [label="<Variable>\nConsole"];
43 [label="<Variable>\nForegroundColor"];
46 [label="<BinaryOperator>\n."];46->45;46->47;
45 [label="<Variable>\nConsoleColor"];
47 [label="<Variable>\nBlue"];
48 [label="<StatementBlock>"];48->51;48->53;
51 [label="<Assignment>\n="];51->50;51->52;
50 [label="<VariableDeclaration>\ni"];50->49;
49 [label="<Variable>\nint"];
52 [label="<IntegerLiteral>\n0"];
53 [label="<While>"];53->55;53->61;
55 [label="<BinaryOperator>\n<"];55->54;55->57;
54 [label="<Variable>\ni"];
57 [label="<BinaryOperator>\n."];57->56;57->58;
56 [label="<Variable>\nbuf"];
58 [label="<Variable>\nLength"];
61 [label="<StatementBlock>"];61->62;61->258;61->259;61->299;61->301;61->347;61->60;
62 [label="<IfThenElse>"];62->66;62->68;62->94;
66 [label="<BinaryOperator>\n=="];66->64;66->67;
64 [label="<BinaryOperator>\n["];64->63;64->65;
63 [label="<Variable>\nbuf"];
65 [label="<Variable>\ni"];
67 [label="<CharLiteral>\n','"];
68 [label="<StatementBlock>"];68->72;68->74;68->78;68->86;
72 [label="<FunctionCall>\n"];72->70;
70 [label="<BinaryOperator>\n."];70->69;70->71;
69 [label="<Variable>\nConsole"];
71 [label="<Variable>\nClear"];
74 [label="<FunctionCall>\n"];74->73;74->75;
73 [label="<Variable>\nPrint"];
75 [label="<StringLiteral>\nProvide input: "];
78 [label="<Assignment>\n="];78->77;78->82;
77 [label="<VariableDeclaration>\ninput"];77->76;
76 [label="<Variable>\nstring"];
82 [label="<FunctionCall>\n"];82->80;
80 [label="<BinaryOperator>\n."];80->79;80->81;
79 [label="<Variable>\nConsole"];
81 [label="<Variable>\nReadLine"];
86 [label="<Assignment>\n="];86->84;86->92;
84 [label="<BinaryOperator>\n["];84->83;84->85;
83 [label="<Variable>\nmemory"];
85 [label="<Variable>\nmemPtr"];
92 [label="<FunctionCall>\n"];92->90;92->93;
90 [label="<BinaryOperator>\n."];90->88;90->91;
88 [label="<BinaryOperator>\n."];88->87;88->89;
87 [label="<Variable>\nSystem"];
89 [label="<Variable>\nConvert"];
91 [label="<Variable>\nToInt32"];
93 [label="<Variable>\ninput"];
94 [label="<IfThenElse>"];94->98;94->101;94->105;
98 [label="<BinaryOperator>\n=="];98->96;98->99;
96 [label="<BinaryOperator>\n["];96->95;96->97;
95 [label="<Variable>\nbuf"];
97 [label="<Variable>\ni"];
99 [label="<CharLiteral>\n'.'"];
101 [label="<FunctionCall>\n"];101->100;101->103;
100 [label="<Variable>\nPrint"];
103 [label="<BinaryOperator>\n["];103->102;103->104;
102 [label="<Variable>\nmemory"];
104 [label="<Variable>\nmemPtr"];
105 [label="<IfThenElse>"];105->109;105->112;105->113;
109 [label="<BinaryOperator>\n=="];109->107;109->110;
107 [label="<BinaryOperator>\n["];107->106;107->108;
106 [label="<Variable>\nbuf"];
108 [label="<Variable>\ni"];
110 [label="<CharLiteral>\n'<'"];
112 [label="<PostfixUnaryAssignment>\n--"];112->111;
111 [label="<Variable>\nmemPtr"];
113 [label="<IfThenElse>"];113->117;113->120;113->121;
117 [label="<BinaryOperator>\n=="];117->115;117->118;
115 [label="<BinaryOperator>\n["];115->114;115->116;
114 [label="<Variable>\nbuf"];
116 [label="<Variable>\ni"];
118 [label="<CharLiteral>\n'>'"];
120 [label="<PostfixUnaryAssignment>\n++"];120->119;
119 [label="<Variable>\nmemPtr"];
121 [label="<IfThenElse>"];121->125;121->130;121->131;
125 [label="<BinaryOperator>\n=="];125->123;125->126;
123 [label="<BinaryOperator>\n["];123->122;123->124;
122 [label="<Variable>\nbuf"];
124 [label="<Variable>\ni"];
126 [label="<CharLiteral>\n'+'"];
130 [label="<PostfixUnaryAssignment>\n++"];130->128;
128 [label="<BinaryOperator>\n["];128->127;128->129;
127 [label="<Variable>\nmemory"];
129 [label="<Variable>\nmemPtr"];
131 [label="<IfThenElse>"];131->135;131->140;131->141;
135 [label="<BinaryOperator>\n=="];135->133;135->136;
133 [label="<BinaryOperator>\n["];133->132;133->134;
132 [label="<Variable>\nbuf"];
134 [label="<Variable>\ni"];
136 [label="<CharLiteral>\n'-'"];
140 [label="<PostfixUnaryAssignment>\n--"];140->138;
138 [label="<BinaryOperator>\n["];138->137;138->139;
137 [label="<Variable>\nmemory"];
139 [label="<Variable>\nmemPtr"];
141 [label="<IfThenElse>"];141->145;141->147;141->-2;-2 [label="<NULL>"];
145 [label="<BinaryOperator>\n=="];145->143;145->146;
143 [label="<BinaryOperator>\n["];143->142;143->144;
142 [label="<Variable>\nbuf"];
144 [label="<Variable>\ni"];
146 [label="<CharLiteral>\n'['"];
147 [label="<IfThenElse>"];147->151;147->153;147->199;
151 [label="<BinaryOperator>\n=="];151->149;151->152;
149 [label="<BinaryOperator>\n["];149->148;149->150;
148 [label="<Variable>\nmemory"];
150 [label="<Variable>\nmemPtr"];
152 [label="<IntegerLiteral>\n0"];
153 [label="<StatementBlock>"];153->156;153->160;153->164;
156 [label="<Assignment>\n="];156->155;156->157;
155 [label="<VariableDeclaration>\nskip"];155->154;
154 [label="<Variable>\nint"];
157 [label="<IntegerLiteral>\n0"];
160 [label="<Assignment>\n="];160->159;160->162;
159 [label="<VariableDeclaration>\nptr"];159->158;
158 [label="<Variable>\nint"];
162 [label="<BinaryOperator>\n+"];162->161;162->163;
161 [label="<Variable>\ni"];
163 [label="<IntegerLiteral>\n1"];
164 [label="<While>"];164->170;164->174;
170 [label="<BinaryOperator>\nor"];170->168;170->172;
168 [label="<BinaryOperator>\n!="];168->166;168->169;
166 [label="<BinaryOperator>\n["];166->165;166->167;
165 [label="<Variable>\nbuf"];
167 [label="<Variable>\nptr"];
169 [label="<CharLiteral>\n']'"];
172 [label="<BinaryOperator>\n>"];172->171;172->173;
171 [label="<Variable>\nskip"];
173 [label="<IntegerLiteral>\n0"];
174 [label="<StatementBlock>"];174->175;174->194;174->197;
175 [label="<IfThenElse>"];175->179;175->182;175->184;
179 [label="<BinaryOperator>\n=="];179->177;179->180;
177 [label="<BinaryOperator>\n["];177->176;177->178;
176 [label="<Variable>\nbuf"];
178 [label="<Variable>\nptr"];
180 [label="<CharLiteral>\n'['"];
182 [label="<Assignment>\n+="];182->181;182->183;
181 [label="<Variable>\nskip"];
183 [label="<IntegerLiteral>\n1"];
184 [label="<IfThenElse>"];184->188;184->191;184->-3;-3 [label="<NULL>"];
188 [label="<BinaryOperator>\n=="];188->186;188->189;
186 [label="<BinaryOperator>\n["];186->185;186->187;
185 [label="<Variable>\nbuf"];
187 [label="<Variable>\nptr"];
189 [label="<CharLiteral>\n']'"];
191 [label="<Assignment>\n-="];191->190;191->192;
190 [label="<Variable>\nskip"];
192 [label="<IntegerLiteral>\n1"];
194 [label="<Assignment>\n+="];194->193;194->195;
193 [label="<Variable>\nptr"];
195 [label="<IntegerLiteral>\n1"];
197 [label="<Assignment>\n="];197->196;197->198;
196 [label="<Variable>\ni"];
198 [label="<Variable>\nptr"];
199 [label="<IfThenElse>"];199->203;199->205;199->-4;-4 [label="<NULL>"];
203 [label="<BinaryOperator>\n=="];203->201;203->204;
201 [label="<BinaryOperator>\n["];201->200;201->202;
200 [label="<Variable>\nbuf"];
202 [label="<Variable>\ni"];
204 [label="<CharLiteral>\n']'"];
205 [label="<StatementBlock>"];205->206;
206 [label="<IfThenElse>"];206->210;206->212;206->-5;-5 [label="<NULL>"];
210 [label="<BinaryOperator>\n!="];210->208;210->211;
208 [label="<BinaryOperator>\n["];208->207;208->209;
207 [label="<Variable>\nmemory"];
209 [label="<Variable>\nmemPtr"];
211 [label="<IntegerLiteral>\n0"];
212 [label="<StatementBlock>"];212->215;212->219;212->223;
215 [label="<Assignment>\n="];215->214;215->216;
214 [label="<VariableDeclaration>\nskip"];214->213;
213 [label="<Variable>\nint"];
216 [label="<IntegerLiteral>\n0"];
219 [label="<Assignment>\n="];219->218;219->221;
218 [label="<VariableDeclaration>\nptr"];218->217;
217 [label="<Variable>\nint"];
221 [label="<BinaryOperator>\n-"];221->220;221->222;
220 [label="<Variable>\ni"];
222 [label="<IntegerLiteral>\n1"];
223 [label="<While>"];223->229;223->233;
229 [label="<BinaryOperator>\nor"];229->227;229->231;
227 [label="<BinaryOperator>\n!="];227->225;227->228;
225 [label="<BinaryOperator>\n["];225->224;225->226;
224 [label="<Variable>\nbuf"];
226 [label="<Variable>\nptr"];
228 [label="<CharLiteral>\n'['"];
231 [label="<BinaryOperator>\n>"];231->230;231->232;
230 [label="<Variable>\nskip"];
232 [label="<IntegerLiteral>\n0"];
233 [label="<StatementBlock>"];233->234;233->251;233->253;
234 [label="<IfThenElse>"];234->238;234->241;234->242;
238 [label="<BinaryOperator>\n=="];238->236;238->239;
236 [label="<BinaryOperator>\n["];236->235;236->237;
235 [label="<Variable>\nbuf"];
237 [label="<Variable>\nptr"];
239 [label="<CharLiteral>\n']'"];
241 [label="<PostfixUnaryAssignment>\n++"];241->240;
240 [label="<Variable>\nskip"];
242 [label="<IfThenElse>"];242->246;242->249;242->-6;-6 [label="<NULL>"];
246 [label="<BinaryOperator>\n=="];246->244;246->247;
244 [label="<BinaryOperator>\n["];244->243;244->245;
243 [label="<Variable>\nbuf"];
245 [label="<Variable>\nptr"];
247 [label="<CharLiteral>\n'['"];
249 [label="<PostfixUnaryAssignment>\n--"];249->248;
248 [label="<Variable>\nskip"];
251 [label="<PostfixUnaryAssignment>\n--"];251->250;
250 [label="<Variable>\nptr"];
253 [label="<Assignment>\n="];253->252;253->254;
252 [label="<Variable>\ni"];
254 [label="<Variable>\nptr"];
258 [label="<FunctionCall>\n"];258->256;
256 [label="<BinaryOperator>\n."];256->255;256->257;
255 [label="<Variable>\nConsole"];
257 [label="<Variable>\nClear"];
259 [label="<StatementBlock>"];259->262;259->264;
262 [label="<Assignment>\n="];262->261;262->263;
261 [label="<VariableDeclaration>\nj"];261->260;
260 [label="<Variable>\nint"];
263 [label="<IntegerLiteral>\n0"];
264 [label="<While>"];264->266;264->272;
266 [label="<BinaryOperator>\n<"];266->265;266->268;
265 [label="<Variable>\nj"];
268 [label="<BinaryOperator>\n."];268->267;268->269;
267 [label="<Variable>\nmemory"];
269 [label="<Variable>\nLength"];
272 [label="<StatementBlock>"];272->273;272->292;272->271;
273 [label="<IfThenElse>"];273->275;273->280;273->287;
275 [label="<BinaryOperator>\n=="];275->274;275->276;
274 [label="<Variable>\nj"];
276 [label="<Variable>\nmemPtr"];
280 [label="<Assignment>\n="];280->278;280->282;
278 [label="<BinaryOperator>\n."];278->277;278->279;
277 [label="<Variable>\nConsole"];
279 [label="<Variable>\nForegroundColor"];
282 [label="<BinaryOperator>\n."];282->281;282->283;
281 [label="<Variable>\nConsoleColor"];
283 [label="<Variable>\nRed"];
287 [label="<Assignment>\n="];287->285;287->289;
285 [label="<BinaryOperator>\n."];285->284;285->286;
284 [label="<Variable>\nConsole"];
286 [label="<Variable>\nForegroundColor"];
289 [label="<BinaryOperator>\n."];289->288;289->290;
288 [label="<Variable>\nConsoleColor"];
290 [label="<Variable>\nBlue"];
292 [label="<FunctionCall>\n"];292->291;292->296;
291 [label="<Variable>\nPrint"];
296 [label="<BinaryOperator>\n+"];296->294;296->297;
294 [label="<BinaryOperator>\n["];294->293;294->295;
293 [label="<Variable>\nmemory"];
295 [label="<Variable>\nj"];
297 [label="<StringLiteral>\n "];
271 [label="<PostfixUnaryAssignment>\n++"];271->270;
270 [label="<Variable>\nj"];
299 [label="<FunctionCall>\n"];299->298;299->300;
298 [label="<Variable>\nPrint"];
300 [label="<StringLiteral>\n
"];
301 [label="<StatementBlock>"];301->304;301->306;
304 [label="<Assignment>\n="];304->303;304->305;
303 [label="<VariableDeclaration>\nj"];303->302;
302 [label="<Variable>\nint"];
305 [label="<IntegerLiteral>\n0"];
306 [label="<While>"];306->308;306->314;
308 [label="<BinaryOperator>\n<"];308->307;308->310;
307 [label="<Variable>\nj"];
310 [label="<BinaryOperator>\n."];310->309;310->311;
309 [label="<Variable>\nbuf"];
311 [label="<Variable>\nLength"];
314 [label="<StatementBlock>"];314->315;314->334;314->313;
315 [label="<IfThenElse>"];315->317;315->322;315->329;
317 [label="<BinaryOperator>\n=="];317->316;317->318;
316 [label="<Variable>\nj"];
318 [label="<Variable>\ni"];
322 [label="<Assignment>\n="];322->320;322->324;
320 [label="<BinaryOperator>\n."];320->319;320->321;
319 [label="<Variable>\nConsole"];
321 [label="<Variable>\nForegroundColor"];
324 [label="<BinaryOperator>\n."];324->323;324->325;
323 [label="<Variable>\nConsoleColor"];
325 [label="<Variable>\nRed"];
329 [label="<Assignment>\n="];329->327;329->331;
327 [label="<BinaryOperator>\n."];327->326;327->328;
326 [label="<Variable>\nConsole"];
328 [label="<Variable>\nForegroundColor"];
331 [label="<BinaryOperator>\n."];331->330;331->332;
330 [label="<Variable>\nConsoleColor"];
332 [label="<Variable>\nBlue"];
334 [label="<FunctionCall>\n"];334->333;334->338;
333 [label="<Variable>\nPrint"];
338 [label="<BinaryOperator>\n+"];338->336;338->339;
336 [label="<BinaryOperator>\n["];336->335;336->337;
335 [label="<Variable>\nbuf"];
337 [label="<Variable>\nj"];
339 [label="<StringLiteral>\n "];
313 [label="<PostfixUnaryAssignment>\n++"];313->312;
312 [label="<Variable>\nj"];
347 [label="<FunctionCall>\n"];347->345;347->348;
345 [label="<BinaryOperator>\n."];345->343;345->346;
343 [label="<BinaryOperator>\n."];343->341;343->344;
341 [label="<BinaryOperator>\n."];341->340;341->342;
340 [label="<Variable>\nSystem"];
342 [label="<Variable>\nThreading"];
344 [label="<Variable>\nThread"];
346 [label="<Variable>\nSleep"];
348 [label="<IntegerLiteral>\n1000"];
60 [label="<PostfixUnaryAssignment>\n++"];60->59;
59 [label="<Variable>\ni"];
352 [label="<FunctionCall>\n"];352->350;
350 [label="<BinaryOperator>\n."];350->349;350->351;
349 [label="<Variable>\nConsole"];
351 [label="<Variable>\nReadLine"];
}