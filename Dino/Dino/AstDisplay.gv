digraph G {
0 [label="<StatementBlock>"];0->2;0->74;0->338;0->520;0->542;
2 [label="<Assignment>\n="];2->1;2->3;
1 [label="<VariableDeclaration>\nfunc void Main"];
3 [label="<FunctionLiteral>
void"];3->4;
4 [label="<StatementBlock>"];4->6;4->9;4->26;4->31;4->35;4->39;4->41;4->46;4->48;4->50;4->55;4->60;4->62;4->64;4->69;4->73;
6 [label="<Assignment>\n="];6->5;6->7;
5 [label="<VariableDeclaration>\nLinkedList list"];
7 [label="<UnaryOperator>\nnew"];7->8;
8 [label="<Variable>\nLinkedList"];
9 [label="<StatementBlock>"];9->11;9->13;
11 [label="<Assignment>\n="];11->10;11->12;
10 [label="<VariableDeclaration>\nint i"];
12 [label="<IntegerLiteral>\n0"];
13 [label="<While>"];13->15;13->19;
15 [label="<BinaryOperator>\n<"];15->14;15->16;
14 [label="<Variable>\ni"];
16 [label="<IntegerLiteral>\n10"];
19 [label="<StatementBlock>"];19->23;19->17;
23 [label="<FunctionCall>\n"];23->21;23->24;
21 [label="<BinaryOperator>\n."];21->20;21->22;
20 [label="<Variable>\nlist"];
22 [label="<Variable>\nInsertAtBack"];
24 [label="<Variable>\ni"];
17 [label="<Increment>\n++"];17->18;
18 [label="<Variable>\ni"];
26 [label="<FunctionCall>\n"];26->25;26->27;
25 [label="<Variable>\nPrintLn"];
27 [label="<IntegerLiteral>\nOriginal:"];
31 [label="<FunctionCall>\n"];31->29;
29 [label="<BinaryOperator>\n."];29->28;29->30;
28 [label="<Variable>\nlist"];
30 [label="<Variable>\nShow"];
35 [label="<FunctionCall>\n"];35->33;35->36;35->37;
33 [label="<BinaryOperator>\n."];33->32;33->34;
32 [label="<Variable>\nlist"];
34 [label="<Variable>\nInsert"];
36 [label="<IntegerLiteral>\n4"];
37 [label="<IntegerLiteral>\n444"];
39 [label="<FunctionCall>\n"];39->38;
38 [label="<Variable>\nPrintLn"];
41 [label="<FunctionCall>\n"];41->40;41->42;
40 [label="<Variable>\nPrintLn"];
42 [label="<IntegerLiteral>\nAfter Insert(4, 444):"];
46 [label="<FunctionCall>\n"];46->44;
44 [label="<BinaryOperator>\n."];44->43;44->45;
43 [label="<Variable>\nlist"];
45 [label="<Variable>\nShow"];
48 [label="<FunctionCall>\n"];48->47;
47 [label="<Variable>\nPrintLn"];
50 [label="<FunctionCall>\n"];50->49;50->51;
49 [label="<Variable>\nPrintLn"];
51 [label="<IntegerLiteral>\nAfter Remove(4):"];
55 [label="<FunctionCall>\n"];55->53;55->56;
53 [label="<BinaryOperator>\n."];53->52;53->54;
52 [label="<Variable>\nlist"];
54 [label="<Variable>\nRemove"];
56 [label="<IntegerLiteral>\n4"];
60 [label="<FunctionCall>\n"];60->58;
58 [label="<BinaryOperator>\n."];58->57;58->59;
57 [label="<Variable>\nlist"];
59 [label="<Variable>\nShow"];
62 [label="<FunctionCall>\n"];62->61;
61 [label="<Variable>\nPrintLn"];
64 [label="<FunctionCall>\n"];64->63;64->65;
63 [label="<Variable>\nPrintLn"];
65 [label="<IntegerLiteral>\nAfter Clear():"];
69 [label="<FunctionCall>\n"];69->67;
67 [label="<BinaryOperator>\n."];67->66;67->68;
66 [label="<Variable>\nlist"];
68 [label="<Variable>\nClear"];
73 [label="<FunctionCall>\n"];73->71;
71 [label="<BinaryOperator>\n."];71->70;71->72;
70 [label="<Variable>\nlist"];
72 [label="<Variable>\nShow"];
74 [label="<TypeDeclaration>\nListNode"];74->75;74->76;74->78;74->88;74->98;74->106;74->136;74->198;74->219;74->245;74->270;74->291;
75 [label="<VariableDeclaration>\nint data"];
76 [label="<VariableDeclaration>\nListNode next"];
78 [label="<Assignment>\n="];78->77;78->79;
77 [label="<VariableDeclaration>\nfunc void SetData"];
79 [label="<FunctionLiteral>
void"];79->80;79->86;
80 [label="<VariableDeclaration>\nint data"];
86 [label="<StatementBlock>"];86->84;
84 [label="<Assignment>\n="];84->82;84->85;
82 [label="<BinaryOperator>\n."];82->81;82->83;
81 [label="<Variable>\nthis"];
83 [label="<Variable>\ndata"];
85 [label="<Variable>\ndata"];
88 [label="<Assignment>\n="];88->87;88->89;
87 [label="<VariableDeclaration>\nfunc void SetNext"];
89 [label="<FunctionLiteral>
void"];89->90;89->96;
90 [label="<VariableDeclaration>\nListNode next"];
96 [label="<StatementBlock>"];96->94;
94 [label="<Assignment>\n="];94->92;94->95;
92 [label="<BinaryOperator>\n."];92->91;92->93;
91 [label="<Variable>\nthis"];
93 [label="<Variable>\nnext"];
95 [label="<Variable>\nnext"];
98 [label="<Assignment>\n="];98->97;98->99;
97 [label="<VariableDeclaration>\nfunc int GetData"];
99 [label="<FunctionLiteral>
int"];99->104;
104 [label="<StatementBlock>"];104->100;
100 [label="<UnaryOperatorStatement>\nreturn"];100->102;
102 [label="<BinaryOperator>\n."];102->101;102->103;
101 [label="<Variable>\nthis"];
103 [label="<Variable>\ndata"];
106 [label="<Assignment>\n="];106->105;106->107;
105 [label="<VariableDeclaration>\nfunc ListNode GetNext"];
107 [label="<FunctionLiteral>
ListNode"];107->108;107->109;
108 [label="<VariableDeclaration>\nint index"];
109 [label="<StatementBlock>"];109->110;109->116;109->125;
110 [label="<IfThenElse>"];110->112;110->114;110->4294967295;
112 [label="<BinaryOperator>\n=="];112->111;112->113;
111 [label="<Variable>\nindex"];
113 [label="<IntegerLiteral>\n0"];
114 [label="<UnaryOperatorStatement>\nreturn"];114->115;
115 [label="<Variable>\nthis"];
116 [label="<IfThenElse>"];116->120;116->123;116->4294967295;
120 [label="<BinaryOperator>\n=="];120->118;120->121;
118 [label="<BinaryOperator>\n."];118->117;118->119;
117 [label="<Variable>\nthis"];
119 [label="<Variable>\nnext"];
121 [label="<NullLiteral>"];
123 [label="<FunctionCall>\n"];123->122;123->124;
122 [label="<Variable>\nPrintLn"];
124 [label="<IntegerLiteral>\nList index out of bounds"];
125 [label="<UnaryOperatorStatement>\nreturn"];125->131;
131 [label="<FunctionCall>\n"];131->129;131->133;
129 [label="<BinaryOperator>\n."];129->127;129->130;
127 [label="<BinaryOperator>\n."];127->126;127->128;
126 [label="<Variable>\nthis"];
128 [label="<Variable>\nnext"];
130 [label="<Variable>\nGetNext"];
133 [label="<BinaryOperator>\n-"];133->132;133->134;
132 [label="<Variable>\nindex"];
134 [label="<IntegerLiteral>\n1"];
136 [label="<Assignment>\n="];136->135;136->137;
135 [label="<VariableDeclaration>\nfunc LinkedList Insert"];
137 [label="<FunctionLiteral>
LinkedList"];137->138;137->139;137->140;
138 [label="<VariableDeclaration>\nint index"];
139 [label="<VariableDeclaration>\nint data"];
140 [label="<StatementBlock>"];140->141;140->150;140->195;
141 [label="<IfThenElse>"];141->143;141->145;141->4294967295;
143 [label="<BinaryOperator>\n=="];143->142;143->144;
142 [label="<Variable>\nindex"];
144 [label="<IntegerLiteral>\n0"];
145 [label="<UnaryOperatorStatement>\nreturn"];145->147;
147 [label="<FunctionCall>\n"];147->146;147->148;147->149;
146 [label="<Variable>\nCreateNode"];
148 [label="<Variable>\ndata"];
149 [label="<Variable>\nthis"];
150 [label="<IfThenElse>"];150->154;150->157;150->159;
154 [label="<BinaryOperator>\n=="];154->152;154->155;
152 [label="<BinaryOperator>\n."];152->151;152->153;
151 [label="<Variable>\nthis"];
153 [label="<Variable>\nnext"];
155 [label="<NullLiteral>"];
157 [label="<FunctionCall>\n"];157->156;157->158;
156 [label="<Variable>\nPrintLn"];
158 [label="<IntegerLiteral>\nList index out of bounds"];
159 [label="<IfThenElse>"];159->167;159->176;159->184;
167 [label="<BinaryOperator>\nand"];167->165;167->169;
165 [label="<BinaryOperator>\n=="];165->163;165->166;
163 [label="<BinaryOperator>\n."];163->161;163->164;
161 [label="<BinaryOperator>\n."];161->160;161->162;
160 [label="<Variable>\nthis"];
162 [label="<Variable>\nnext"];
164 [label="<Variable>\nnext"];
166 [label="<NullLiteral>"];
169 [label="<BinaryOperator>\n=="];169->168;169->170;
168 [label="<Variable>\nindex"];
170 [label="<IntegerLiteral>\n2"];
176 [label="<Assignment>\n="];176->174;176->178;
174 [label="<BinaryOperator>\n."];174->172;174->175;
172 [label="<BinaryOperator>\n."];172->171;172->173;
171 [label="<Variable>\nthis"];
173 [label="<Variable>\nnext"];
175 [label="<Variable>\nnext"];
178 [label="<FunctionCall>\n"];178->177;178->179;178->180;
177 [label="<Variable>\nCreateNode"];
179 [label="<Variable>\ndata"];
180 [label="<NullLiteral>"];
184 [label="<Assignment>\n="];184->182;184->190;
182 [label="<BinaryOperator>\n."];182->181;182->183;
181 [label="<Variable>\nthis"];
183 [label="<Variable>\nnext"];
190 [label="<FunctionCall>\n"];190->188;190->192;190->194;
188 [label="<BinaryOperator>\n."];188->186;188->189;
186 [label="<BinaryOperator>\n."];186->185;186->187;
185 [label="<Variable>\nthis"];
187 [label="<Variable>\nnext"];
189 [label="<Variable>\nInsert"];
192 [label="<BinaryOperator>\n-"];192->191;192->193;
191 [label="<Variable>\nindex"];
193 [label="<IntegerLiteral>\n1"];
194 [label="<Variable>\ndata"];
195 [label="<UnaryOperatorStatement>\nreturn"];195->196;
196 [label="<Variable>\nthis"];
198 [label="<Assignment>\n="];198->197;198->199;
197 [label="<VariableDeclaration>\nfunc int Size"];
199 [label="<FunctionLiteral>
int"];199->200;
200 [label="<StatementBlock>"];200->201;200->209;
201 [label="<IfThenElse>"];201->205;201->207;201->4294967295;
205 [label="<BinaryOperator>\n=="];205->203;205->206;
203 [label="<BinaryOperator>\n."];203->202;203->204;
202 [label="<Variable>\nthis"];
204 [label="<Variable>\nnext"];
206 [label="<NullLiteral>"];
207 [label="<UnaryOperatorStatement>\nreturn"];207->208;
208 [label="<IntegerLiteral>\n1"];
209 [label="<UnaryOperatorStatement>\nreturn"];209->211;
211 [label="<BinaryOperator>\n+"];211->210;211->217;
210 [label="<IntegerLiteral>\n1"];
217 [label="<FunctionCall>\n"];217->215;
215 [label="<BinaryOperator>\n."];215->213;215->216;
213 [label="<BinaryOperator>\n."];213->212;213->214;
212 [label="<Variable>\nthis"];
214 [label="<Variable>\nnext"];
216 [label="<Variable>\nSize"];
219 [label="<Assignment>\n="];219->218;219->220;
218 [label="<VariableDeclaration>\nfunc void InsertAtEnd"];
220 [label="<FunctionLiteral>
void"];220->221;220->222;
221 [label="<VariableDeclaration>\nint data"];
222 [label="<StatementBlock>"];222->223;
223 [label="<IfThenElse>"];223->227;223->232;223->242;
227 [label="<BinaryOperator>\n=="];227->225;227->228;
225 [label="<BinaryOperator>\n."];225->224;225->226;
224 [label="<Variable>\nthis"];
226 [label="<Variable>\nnext"];
228 [label="<NullLiteral>"];
232 [label="<Assignment>\n="];232->230;232->234;
230 [label="<BinaryOperator>\n."];230->229;230->231;
229 [label="<Variable>\nthis"];
231 [label="<Variable>\nnext"];
234 [label="<FunctionCall>\n"];234->233;234->235;234->236;
233 [label="<Variable>\nCreateNode"];
235 [label="<Variable>\ndata"];
236 [label="<NullLiteral>"];
242 [label="<FunctionCall>\n"];242->240;242->243;
240 [label="<BinaryOperator>\n."];240->238;240->241;
238 [label="<BinaryOperator>\n."];238->237;238->239;
237 [label="<Variable>\nthis"];
239 [label="<Variable>\nnext"];
241 [label="<Variable>\nInsertAtEnd"];
243 [label="<Variable>\ndata"];
245 [label="<Assignment>\n="];245->244;245->246;
244 [label="<VariableDeclaration>\nfunc void Show"];
246 [label="<FunctionLiteral>
void"];246->247;
247 [label="<StatementBlock>"];247->249;247->253;
249 [label="<FunctionCall>\n"];249->248;249->251;
248 [label="<Variable>\nPrint"];
251 [label="<BinaryOperator>\n."];251->250;251->252;
250 [label="<Variable>\nthis"];
252 [label="<Variable>\ndata"];
253 [label="<IfThenElse>"];253->257;253->259;253->4294967295;
257 [label="<BinaryOperator>\n!="];257->255;257->258;
255 [label="<BinaryOperator>\n."];255->254;255->256;
254 [label="<Variable>\nthis"];
256 [label="<Variable>\nnext"];
258 [label="<NullLiteral>"];
259 [label="<StatementBlock>"];259->261;259->268;
261 [label="<FunctionCall>\n"];261->260;261->262;
260 [label="<Variable>\nPrint"];
262 [label="<IntegerLiteral>\n, "];
268 [label="<FunctionCall>\n"];268->266;
266 [label="<BinaryOperator>\n."];266->264;266->267;
264 [label="<BinaryOperator>\n."];264->263;264->265;
263 [label="<Variable>\nthis"];
265 [label="<Variable>\nnext"];
267 [label="<Variable>\nShow"];
270 [label="<Assignment>\n="];270->269;270->271;
269 [label="<VariableDeclaration>\nfunc void DeleteChildren"];
271 [label="<FunctionLiteral>
void"];271->272;
272 [label="<StatementBlock>"];272->273;
273 [label="<IfThenElse>"];273->277;273->4294967295;273->279;
277 [label="<BinaryOperator>\n=="];277->275;277->278;
275 [label="<BinaryOperator>\n."];275->274;275->276;
274 [label="<Variable>\nthis"];
276 [label="<Variable>\nnext"];
278 [label="<NullLiteral>"];
279 [label="<StatementBlock>"];279->285;279->286;
285 [label="<FunctionCall>\n"];285->283;
283 [label="<BinaryOperator>\n."];283->281;283->284;
281 [label="<BinaryOperator>\n."];281->280;281->282;
280 [label="<Variable>\nthis"];
282 [label="<Variable>\nnext"];
284 [label="<Variable>\nDeleteChildren"];
286 [label="<UnaryOperatorStatement>\ndelete"];286->288;
288 [label="<BinaryOperator>\n."];288->287;288->289;
287 [label="<Variable>\nthis"];
289 [label="<Variable>\nnext"];
291 [label="<Assignment>\n="];291->290;291->292;
290 [label="<VariableDeclaration>\nfunc void Remove"];
292 [label="<FunctionLiteral>
void"];292->293;292->294;
293 [label="<VariableDeclaration>\nint index"];
294 [label="<StatementBlock>"];294->295;
295 [label="<IfThenElse>"];295->301;295->306;295->308;
301 [label="<BinaryOperator>\nor"];301->299;301->303;
299 [label="<BinaryOperator>\n=="];299->297;299->300;
297 [label="<BinaryOperator>\n."];297->296;297->298;
296 [label="<Variable>\nthis"];
298 [label="<Variable>\nnext"];
300 [label="<NullLiteral>"];
303 [label="<BinaryOperator>\n<="];303->302;303->304;
302 [label="<Variable>\nindex"];
304 [label="<IntegerLiteral>\n0"];
306 [label="<FunctionCall>\n"];306->305;306->307;
305 [label="<Variable>\nPrint"];
307 [label="<IntegerLiteral>\nindex out of bounds"];
308 [label="<IfThenElse>"];308->310;308->312;308->334;
310 [label="<BinaryOperator>\n=="];310->309;310->311;
309 [label="<Variable>\nindex"];
311 [label="<IntegerLiteral>\n1"];
312 [label="<StatementBlock>"];312->314;312->321;312->327;
314 [label="<Assignment>\n="];314->313;314->316;
313 [label="<VariableDeclaration>\nListNode temp"];
316 [label="<BinaryOperator>\n."];316->315;316->317;
315 [label="<Variable>\nthis"];
317 [label="<Variable>\nnext"];
321 [label="<Assignment>\n="];321->319;321->325;
319 [label="<BinaryOperator>\n."];319->318;319->320;
318 [label="<Variable>\nthis"];
320 [label="<Variable>\nnext"];
325 [label="<BinaryOperator>\n."];325->323;325->326;
323 [label="<BinaryOperator>\n."];323->322;323->324;
322 [label="<Variable>\nthis"];
324 [label="<Variable>\nnext"];
326 [label="<Variable>\nnext"];
327 [label="<UnaryOperatorStatement>\ndelete"];327->328;
328 [label="<Variable>\ntemp"];
334 [label="<FunctionCall>\n"];334->332;334->336;
332 [label="<BinaryOperator>\n."];332->330;332->333;
330 [label="<BinaryOperator>\n."];330->329;330->331;
329 [label="<Variable>\nthis"];
331 [label="<Variable>\nnext"];
333 [label="<Variable>\nRemove"];
336 [label="<BinaryOperator>\n-"];336->335;336->337;
335 [label="<Variable>\nindex"];
337 [label="<IntegerLiteral>\n1"];
338 [label="<TypeDeclaration>\nLinkedList"];338->339;338->341;338->352;338->371;338->403;338->416;338->442;338->477;338->499;
339 [label="<VariableDeclaration>\nListNode first"];
341 [label="<Assignment>\n="];341->340;341->342;
340 [label="<VariableDeclaration>\nfunc int GetValue"];
342 [label="<FunctionLiteral>
int"];342->343;342->350;
343 [label="<VariableDeclaration>\nint index"];
350 [label="<StatementBlock>"];350->344;
344 [label="<UnaryOperatorStatement>\nreturn"];344->348;
348 [label="<FunctionCall>\n"];348->346;348->349;
346 [label="<BinaryOperator>\n."];346->345;346->347;
345 [label="<Variable>\nfirst"];
347 [label="<Variable>\nGetNext"];
349 [label="<Variable>\nindex"];
352 [label="<Assignment>\n="];352->351;352->353;
351 [label="<VariableDeclaration>\nfunc int Size"];
353 [label="<FunctionLiteral>
int"];353->354;
354 [label="<StatementBlock>"];354->355;354->363;
355 [label="<IfThenElse>"];355->359;355->361;355->4294967295;
359 [label="<BinaryOperator>\n=="];359->357;359->360;
357 [label="<BinaryOperator>\n."];357->356;357->358;
356 [label="<Variable>\nthis"];
358 [label="<Variable>\nfirst"];
360 [label="<NullLiteral>"];
361 [label="<UnaryOperatorStatement>\nreturn"];361->362;
362 [label="<IntegerLiteral>\n0"];
363 [label="<UnaryOperatorStatement>\nreturn"];363->369;
369 [label="<FunctionCall>\n"];369->367;
367 [label="<BinaryOperator>\n."];367->365;367->368;
365 [label="<BinaryOperator>\n."];365->364;365->366;
364 [label="<Variable>\nthis"];
366 [label="<Variable>\nfirst"];
368 [label="<Variable>\nSize"];
371 [label="<Assignment>\n="];371->370;371->372;
370 [label="<VariableDeclaration>\nfunc void Insert"];
372 [label="<FunctionLiteral>
void"];372->373;372->374;372->375;
373 [label="<VariableDeclaration>\nint index"];
374 [label="<VariableDeclaration>\nint data"];
375 [label="<StatementBlock>"];375->376;
376 [label="<IfThenElse>"];376->380;376->385;376->393;
380 [label="<BinaryOperator>\n=="];380->378;380->381;
378 [label="<BinaryOperator>\n."];378->377;378->379;
377 [label="<Variable>\nthis"];
379 [label="<Variable>\nfirst"];
381 [label="<NullLiteral>"];
385 [label="<Assignment>\n="];385->383;385->387;
383 [label="<BinaryOperator>\n."];383->382;383->384;
382 [label="<Variable>\nthis"];
384 [label="<Variable>\nfirst"];
387 [label="<FunctionCall>\n"];387->386;387->388;387->389;
386 [label="<Variable>\nCreateNode"];
388 [label="<Variable>\ndata"];
389 [label="<NullLiteral>"];
393 [label="<Assignment>\n="];393->391;393->399;
391 [label="<BinaryOperator>\n."];391->390;391->392;
390 [label="<Variable>\nthis"];
392 [label="<Variable>\nfirst"];
399 [label="<FunctionCall>\n"];399->397;399->400;399->401;
397 [label="<BinaryOperator>\n."];397->395;397->398;
395 [label="<BinaryOperator>\n."];395->394;395->396;
394 [label="<Variable>\nthis"];
396 [label="<Variable>\nfirst"];
398 [label="<Variable>\nInsert"];
400 [label="<Variable>\nindex"];
401 [label="<Variable>\ndata"];
403 [label="<Assignment>\n="];403->402;403->404;
402 [label="<VariableDeclaration>\nfunc void InsertAtFront"];
404 [label="<FunctionLiteral>
void"];404->405;404->414;
405 [label="<VariableDeclaration>\nint data"];
414 [label="<StatementBlock>"];414->409;
409 [label="<Assignment>\n="];409->407;409->411;
407 [label="<BinaryOperator>\n."];407->406;407->408;
406 [label="<Variable>\nthis"];
408 [label="<Variable>\nfirst"];
411 [label="<FunctionCall>\n"];411->410;411->412;411->413;
410 [label="<Variable>\nCreateNode"];
412 [label="<Variable>\ndata"];
413 [label="<Variable>\nfirst"];
416 [label="<Assignment>\n="];416->415;416->417;
415 [label="<VariableDeclaration>\nfunc void InsertAtBack"];
417 [label="<FunctionLiteral>
void"];417->418;417->419;
418 [label="<VariableDeclaration>\nint data"];
419 [label="<StatementBlock>"];419->420;
420 [label="<IfThenElse>"];420->424;420->429;420->439;
424 [label="<BinaryOperator>\n=="];424->422;424->425;
422 [label="<BinaryOperator>\n."];422->421;422->423;
421 [label="<Variable>\nthis"];
423 [label="<Variable>\nfirst"];
425 [label="<NullLiteral>"];
429 [label="<Assignment>\n="];429->427;429->431;
427 [label="<BinaryOperator>\n."];427->426;427->428;
426 [label="<Variable>\nthis"];
428 [label="<Variable>\nfirst"];
431 [label="<FunctionCall>\n"];431->430;431->432;431->433;
430 [label="<Variable>\nCreateNode"];
432 [label="<Variable>\ndata"];
433 [label="<NullLiteral>"];
439 [label="<FunctionCall>\n"];439->437;439->440;
437 [label="<BinaryOperator>\n."];437->435;437->438;
435 [label="<BinaryOperator>\n."];435->434;435->436;
434 [label="<Variable>\nthis"];
436 [label="<Variable>\nfirst"];
438 [label="<Variable>\nInsertAtEnd"];
440 [label="<Variable>\ndata"];
442 [label="<Assignment>\n="];442->441;442->443;
441 [label="<VariableDeclaration>\nfunc void Remove"];
443 [label="<FunctionLiteral>
void"];443->444;443->445;
444 [label="<VariableDeclaration>\nint index"];
445 [label="<StatementBlock>"];445->446;
446 [label="<IfThenElse>"];446->448;446->450;446->474;
448 [label="<BinaryOperator>\n=="];448->447;448->449;
447 [label="<Variable>\nindex"];
449 [label="<IntegerLiteral>\n0"];
450 [label="<StatementBlock>"];450->452;450->459;450->467;
452 [label="<Assignment>\n="];452->451;452->454;
451 [label="<VariableDeclaration>\nListNode temp"];
454 [label="<BinaryOperator>\n."];454->453;454->455;
453 [label="<Variable>\nthis"];
455 [label="<Variable>\nfirst"];
459 [label="<Assignment>\n="];459->457;459->465;
457 [label="<BinaryOperator>\n."];457->456;457->458;
456 [label="<Variable>\nthis"];
458 [label="<Variable>\nfirst"];
465 [label="<FunctionCall>\n"];465->463;465->466;
463 [label="<BinaryOperator>\n."];463->461;463->464;
461 [label="<BinaryOperator>\n."];461->460;461->462;
460 [label="<Variable>\nthis"];
462 [label="<Variable>\nfirst"];
464 [label="<Variable>\nGetNext"];
466 [label="<IntegerLiteral>\n1"];
467 [label="<UnaryOperatorStatement>\ndelete"];467->468;
468 [label="<Variable>\ntemp"];
474 [label="<FunctionCall>\n"];474->472;474->475;
472 [label="<BinaryOperator>\n."];472->470;472->473;
470 [label="<BinaryOperator>\n."];470->469;470->471;
469 [label="<Variable>\nthis"];
471 [label="<Variable>\nfirst"];
473 [label="<Variable>\nRemove"];
475 [label="<Variable>\nindex"];
477 [label="<Assignment>\n="];477->476;477->478;
476 [label="<VariableDeclaration>\nfunc void Show"];
478 [label="<FunctionLiteral>
void"];478->479;
479 [label="<StatementBlock>"];479->481;479->483;479->496;
481 [label="<FunctionCall>\n"];481->480;481->482;
480 [label="<Variable>\nPrint"];
482 [label="<IntegerLiteral>\n["];
483 [label="<IfThenElse>"];483->487;483->4294967295;483->494;
487 [label="<BinaryOperator>\n=="];487->485;487->488;
485 [label="<BinaryOperator>\n."];485->484;485->486;
484 [label="<Variable>\nthis"];
486 [label="<Variable>\nfirst"];
488 [label="<NullLiteral>"];
494 [label="<FunctionCall>\n"];494->492;
492 [label="<BinaryOperator>\n."];492->490;492->493;
490 [label="<BinaryOperator>\n."];490->489;490->491;
489 [label="<Variable>\nthis"];
491 [label="<Variable>\nfirst"];
493 [label="<Variable>\nShow"];
496 [label="<FunctionCall>\n"];496->495;496->497;
495 [label="<Variable>\nPrintLn"];
497 [label="<IntegerLiteral>\n]"];
499 [label="<Assignment>\n="];499->498;499->500;
498 [label="<VariableDeclaration>\nfunc void Clear"];
500 [label="<FunctionLiteral>
void"];500->501;
501 [label="<StatementBlock>"];501->502;
502 [label="<IfThenElse>"];502->506;502->4294967295;502->508;
506 [label="<BinaryOperator>\n=="];506->504;506->507;
504 [label="<BinaryOperator>\n."];504->503;504->505;
503 [label="<Variable>\nthis"];
505 [label="<Variable>\nfirst"];
507 [label="<NullLiteral>"];
508 [label="<StatementBlock>"];508->514;508->515;
514 [label="<FunctionCall>\n"];514->512;
512 [label="<BinaryOperator>\n."];512->510;512->513;
510 [label="<BinaryOperator>\n."];510->509;510->511;
509 [label="<Variable>\nthis"];
511 [label="<Variable>\nfirst"];
513 [label="<Variable>\nDeleteChildren"];
515 [label="<UnaryOperatorStatement>\ndelete"];515->517;
517 [label="<BinaryOperator>\n."];517->516;517->518;
516 [label="<Variable>\nthis"];
518 [label="<Variable>\nfirst"];
520 [label="<Assignment>\n="];520->519;520->521;
519 [label="<VariableDeclaration>\nfunc ListNode CreateNode"];
521 [label="<FunctionLiteral>
ListNode"];521->522;521->523;521->524;
522 [label="<VariableDeclaration>\nint data"];
523 [label="<VariableDeclaration>\nListNode next"];
524 [label="<StatementBlock>"];524->526;524->532;524->537;524->539;
526 [label="<Assignment>\n="];526->525;526->527;
525 [label="<VariableDeclaration>\nListNode node"];
527 [label="<UnaryOperator>\nnew"];527->528;
528 [label="<Variable>\nListNode"];
532 [label="<FunctionCall>\n"];532->530;532->533;
530 [label="<BinaryOperator>\n."];530->529;530->531;
529 [label="<Variable>\nnode"];
531 [label="<Variable>\nSetData"];
533 [label="<Variable>\ndata"];
537 [label="<FunctionCall>\n"];537->535;537->538;
535 [label="<BinaryOperator>\n."];535->534;535->536;
534 [label="<Variable>\nnode"];
536 [label="<Variable>\nSetNext"];
538 [label="<Variable>\nnext"];
539 [label="<UnaryOperatorStatement>\nreturn"];539->540;
540 [label="<Variable>\nnode"];
542 [label="<FunctionCall>\n"];542->541;
541 [label="<Variable>\nMain"];
}