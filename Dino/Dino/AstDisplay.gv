digraph G {
0 [label="<Block>"];0->1;0->3;0->5;0->23;
1 [label="<VariableDeclaration>\nint i"];
3 [label="<BinaryOperator>\n="];3->2;3->4;
2 [label="<Variable>\ni"];
4 [label="<IntegerLiteral>\n2"];
5 [label="<IfThenElse>"];5->9;5->11;5->17;
9 [label="<BinaryOperator>\n=="];9->7;9->10;
7 [label="<BinaryOperator>\n*"];7->6;7->8;
6 [label="<Variable>\ni"];
8 [label="<IntegerLiteral>\n2"];
10 [label="<IntegerLiteral>\n4"];
11 [label="<Block>"];11->13;
13 [label="<FunctionCall>\nprint"];13->15;
15 [label="<BinaryOperator>\n*"];15->14;15->16;
14 [label="<Variable>\ni"];
16 [label="<IntegerLiteral>\n3"];
17 [label="<Block>"];17->19;
19 [label="<FunctionCall>\nprint"];19->21;
21 [label="<BinaryOperator>\n*"];21->20;21->22;
20 [label="<IntegerLiteral>\n4"];
22 [label="<IntegerLiteral>\n2"];
23 [label="<While>"];23->25;23->27;
25 [label="<BinaryOperator>\n<"];25->24;25->26;
24 [label="<Variable>\ni"];
26 [label="<IntegerLiteral>\n12"];
27 [label="<Block>"];27->29;27->34;
29 [label="<FunctionCall>\nprint"];29->31;
31 [label="<BinaryOperator>\n-"];31->30;31->32;
30 [label="<Variable>\ni"];
32 [label="<IntegerLiteral>\n2"];
34 [label="<BinaryOperator>\n="];34->33;34->36;
33 [label="<Variable>\ni"];
36 [label="<BinaryOperator>\n+"];36->35;36->37;
35 [label="<Variable>\ni"];
37 [label="<IntegerLiteral>\n1"];
}