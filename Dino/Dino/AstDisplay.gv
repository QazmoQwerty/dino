digraph G {
0 [label="<StatementBlock>"];0->2;0->26;
2 [label="<Assignment>\n="];2->1;2->4;
1 [label="<VariableDeclaration>\nfunc int Fib"];
4 [label="<FunctionLiteral>
int"];4->3;4->5;
3 [label="<VariableDeclaration>\nint n"];
5 [label="<StatementBlock>"];5->6;
6 [label="<IfThenElse>"];6->8;6->10;6->13;
8 [label="<BinaryOperator>\n<="];8->7;8->9;
7 [label="<Variable>\nn"];
9 [label="<IntegerLiteral>\n1"];
10 [label="<StatementBlock>"];10->11;
11 [label="<UnaryOperatorStatement>\nreturn"];11->12;
12 [label="<Variable>\nn"];
13 [label="<StatementBlock>"];13->14;
14 [label="<UnaryOperatorStatement>\nreturn"];14->20;
20 [label="<BinaryOperator>\n+"];20->16;20->22;
16 [label="<FunctionCall>\n"];16->15;16->18;
15 [label="<Variable>\nFib"];
18 [label="<BinaryOperator>\n-"];18->17;18->19;
17 [label="<Variable>\nn"];
19 [label="<IntegerLiteral>\n1"];
22 [label="<FunctionCall>\n"];22->21;22->24;
21 [label="<Variable>\nFib"];
24 [label="<BinaryOperator>\n-"];24->23;24->25;
23 [label="<Variable>\nn"];
25 [label="<IntegerLiteral>\n2"];
26 [label="<StatementBlock>"];26->28;26->30;
28 [label="<Assignment>\n="];28->27;28->29;
27 [label="<VariableDeclaration>\nint i"];
29 [label="<IntegerLiteral>\n0"];
30 [label="<While>"];30->32;30->37;
32 [label="<BinaryOperator>\n<"];32->31;32->33;
31 [label="<Variable>\ni"];
33 [label="<IntegerLiteral>\n20"];
37 [label="<StatementBlock>"];37->39;37->34;
39 [label="<FunctionCall>\n"];39->38;39->41;
38 [label="<Variable>\nPrint"];
41 [label="<FunctionCall>\n"];41->40;41->42;
40 [label="<Variable>\nFib"];
42 [label="<Variable>\ni"];
34 [label="<Increment>\n++"];34->35;
35 [label="<Variable>\ni"];
}