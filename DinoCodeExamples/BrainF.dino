namespace BrainF {

    char[30000] tape

    char putchar(char c): extern
    char getchar(): extern

    // void PrintNum(int num) {
    //     int a ≡ 1
    //     while a ≤ num / 10: a *= 10
    //     while a > 0 {
    //         putchar((num % (a * 10) / a) as char + '0')
    //         a /= 10
    //     }
    //     putchar('\n')
    // }

    void Interpret(char[8] input) {
        int ptr ≡ 0
        for int i ≡ 0 | i < input.Size | i+=1 {
            char curr ≡ input[i]
            if      curr = '>': ptr += 1
            else if curr = '<': ptr -= 1
            else if curr = '+': tape[ptr] += 1 as char
            else if curr = '-': tape[ptr] -= 1 as char
            else if curr = '.': putchar(tape[ptr])
            else if curr = ',': tape[ptr] ≡ getchar()
            else if curr = ']' and tape[ptr] ≠ 0 as char {
                int loop ≡ 1
                while loop > 0 {
                    curr ≡ input[i-=1]
                    if curr =  '[':
                        loop -= 1
                    else if curr = ']':
                        loop += 1
                }
            }
        }
    }

    void Main() {
        for int i ≡ 0 | i < tape.Size | i+=1:
            tape[i] ≡ null
        
        // outputs input
        var input ≡ [',', '[', '.', '[', '-', ']', ',', ']']    
        
        // outputs the ASCII charset
        var input2 ≡ ['.', '+', '[', '.', '+', ']']
        Interpret(input)
    }
}