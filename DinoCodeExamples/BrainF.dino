namespace BrainF {
    
    char[30000] tape

    char putchar(char c): extern
    char getchar(): extern

    void Interpret(char[] input) {
        int ptr ≡ 0
        for int i ≡ 0 | i < input.Size | i+=1 {
            char curr ≡ input[i]
            if      curr = '>': ptr += 1
            else if curr = '<': ptr -= 1
            else if curr = '+': tape[ptr] += 1 as char
            else if curr = '-': tape[ptr] -= 1 as char
            else if curr = '.': putchar(tape[ptr])
            else if curr = ',': tape[ptr] ≡ getchar()
            else if curr = ']' and tape[ptr] ≠ 0 as char {
                int loop ≡ 1
                while loop > 0 {
                    curr ≡ input[i-=1]
                    if curr =  '[':
                        loop -= 1
                    else if curr = ']':
                        loop += 1
                }
            }
        }
    }

    void Main() {
        for int i ≡ 0 | i < tape.Size | i+=1:
            tape[i] ≡ null
        
        // outputs input
        var input ≡ [',', '[', '.', '[', '-', ']', ',', ']']    
        
        // outputs the ASCII charset
        //var input ≡ ['.', '+', '[', '.', '+', ']']

        var arr ≡ new char[8]

        for int i ≡ 0 | i < arr.Size | i+=1:
            arr[i] ≡ input[i]
        
        Interpret(arr)
    }
}