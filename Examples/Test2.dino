// import "Examples/std"
// import "Examples/std2"

// import "std2"

namespace Test {

    char putchar(char c): extern "putchar"

    void PrintD(int n) {
        int a ≡ 1
        while a ≤ n / 10: a *= 10
        while a > 0 {
            putchar((n % (a * 10) / a + 48) as char)
            a /= 10
        }
        putchar('\n')
    }

    void PrintB(bool b) {
        if b {
            putchar('t') | putchar('r') | putchar('u') | putchar('e') | putchar('\n')
        }
        else {
            putchar('f') | putchar('a') | putchar('l') | putchar('s') | putchar('e') | putchar('\n')
        }
    }

    (int, bool[2]) Foo(int a, bool b, bool c) {
        bool[2] arr
        arr[0] := b
        arr[1] := c
        return a, arr
    }    

    void Main() {
        // var a := new int[10]

        // (bool, int) n := false, 10

        // PrintB(n[0])
        // PrintD(n[1])

        // var f := (int a, int b) int, int { return a + b, a * b}
        // var n2 := f(2, 4)
        // PrintD(n2[0])
        // PrintD(n2[1])

        void(int, int) f := (int a, int b) { PrintD(a * b) }
        f(200, 300)
        12 := 14


        // var f := Foo(100, true, false)
        // (int, bool[2]) a12
        // PrintD(f[0])
        // PrintB(f[1][0])
        // PrintB(f[1][1])


        // for int i := 0 | i < a.Size | i++ {
        //     PrintD(a[i])
        // }
        // var b := [1, 2, 3, 4, 5]
        // for int i := 0 | i < b.Size | i++ {
        //     PrintD(b[i])
        // }
    }
}